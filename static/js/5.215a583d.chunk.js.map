{"version":3,"sources":["components/ApyCalculatorModal/index.tsx","utils/latinise.ts","components/Select/Select.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getLiquidityUrlPathParts.ts","views/Liquiditypools/components/Liquiditypoolcard/DetailsSection.tsx","views/Liquiditypools/components/Liquiditypoolcard/CardHeading.tsx","hooks/useLiquidityApprove.ts","hooks/useLiquidityStake.ts","hooks/useLiquidityUnstake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ModalInput/ModalInput.tsx","views/Liquiditypools/components/DepositModal.tsx","views/Liquiditypools/components/WithdrawModal.tsx","views/Liquiditypools/components/Liquiditypoolcard/StakeAction.tsx","hooks/useLiquidityHarvest.ts","views/Liquiditypools/components/Liquiditypoolcard/HarvestAction.tsx","views/Liquiditypools/components/types.ts","views/Liquiditypools/components/Liquiditypoolcard/LiquidityPoolCardActions.tsx","views/Liquiditypools/components/Liquiditypoolcard/ApyButton.tsx","views/Liquiditypools/components/Liquiditypoolcard/Liquiditypoolcard.tsx","hooks/useDelayedUnmount.ts","views/Liquiditypools/components/Liquiditypooltable/Apr.tsx","views/Liquiditypools/components/Liquiditypooltable/Farm.tsx","views/Liquiditypools/components/Liquiditypooltable/Earned.tsx","views/Liquiditypools/components/Liquiditypooltable/Details.tsx","views/Liquiditypools/components/Liquiditypooltable/Liquidity.tsx","views/Liquiditypools/components/Liquiditypooltable/Actions/styles.ts","views/Liquiditypools/components/Liquiditypooltable/Actions/HarvestAction.tsx","views/Liquiditypools/components/Liquiditypooltable/Actions/StakedAction.tsx","views/Liquiditypools/components/Liquiditypooltable/Actions/ActionPanel.tsx","views/Liquiditypools/components/Liquiditypooltable/CellLayout.tsx","views/Liquiditypools/components/Liquiditypooltable/Row.tsx","views/Liquiditypools/components/Liquiditypooltable/FarmTable.tsx","views/Liquiditypools/LiquiditypoolTab.tsx","views/Liquiditypools/components/SearchInput.tsx","views/Liquiditypools/components/ToggleView.tsx","views/Liquiditypools/Liquiditypools.tsx","views/Liquiditypools/Liquiditypoolsagent.tsx","views/Liquiditypools/Liquiditypoolswrapper.tsx","components/Balance.tsx","../node_modules/react-countup/build/index.js","components/Tags.tsx","components/UnlockButton.tsx","../node_modules/countup.js/dist/countUp.min.js","components/layout/Flex.tsx","hooks/usePersistState.ts","components/FarmsPageHeader/FarmsPageHeader.tsx","utils/compoundApyHelpers.ts"],"names":["Grid","styled","div","GridItem","ApyCalculatorModal","onDismiss","tokenPrice","apr","linkLabel","linkHref","earningTokenSymbol","roundingDecimals","compoundFrequency","performanceFee","t","useTranslation","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","title","fontSize","bold","color","textTransform","mb","getRoi","amountEarned","amountInvested","toFixed","maxWidth","freq","toLocaleString","mt","fee","justifyContent","href","Latinise","latin_map","τ","Τ","latinise","input","replace","x","DropDownHeader","theme","shadows","inset","colors","inputSecondary","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","width","props","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","options","onChange","containerRef","useRef","dropdownRef","useState","setIsOpen","selectedOption","setSelectedOption","height","containerSize","setContainerSize","toggling","onOptionClicked","option","useEffect","current","offsetWidth","offsetHeight","ref","onClick","label","map","Wrapper","primary","ExpandableSectionButton","expanded","aria-label","role","defaultProps","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wethAddressString","getWETH","address","ethSymbol","getETH","symbol","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","removed","totalValueFormatted","lpLabel","addLiquidityUrl","liquidity","currentBlock","useBlock","startBlock","endBlock","shouldShowBlockCountdown","blocksUntilStart","Math","max","blocksRemaining","hasPoolStarted","alignItems","small","Balance","value","decimals","ml","name","Flex","CardHeading","isCommunityFarm","flexDirection","split","useLiquidityApprove","liquidityId","callback","account","useWeb3React","dispatch","useAppDispatch","liquidityPoolContract","getLiquidityPoolContractAddress","liquidityContract","useTokenContract","inputs","useMemo","allowance","useSingleCallResult","result","BigNumber","toString","undefined","currentallowance","approvalState","gt","ApprovalState","APPROVED","NOT_APPROVED","UNKNOWN","approve","useCallback","a","console","error","estimateGas","MaxUint256","estimatedGas","gasLimit","calculateGasMargin","then","fetchFarmUserDataAsync","catch","useLiquidityStake","useLiquidityPoolContract","amount","deposit","times","BIG_TEN","pow","useLiquidityUnstake","enableEmergencyWithdraw","onUnstake","emergencyWithdraw","estimatedGas_em","withdraw","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","child","i","StyledTokenInput","isWarning","warning","text","StyledInput","Input","xs","StyledErrorMessage","Text","ModalInput","onSelectMax","inputTitle","isBalanceZero","style","position","pl","balance","balanceNumber","Number","maximumFractionDigits","displayBalance","pattern","inputMode","step","min","placeholder","scale","mr","external","DepositModal","onConfirm","tokenName","setCallback","val","setVal","pendingTx","setPendingTx","fullBalance","getFullDisplayBalance","valNumber","fullBalanceNumber","toastSuccess","useToast","handleChange","e","currentTarget","validity","valid","handleSelectMax","variant","disabled","isFinite","eq","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakeCallbackHander","unstakeCallbackHander","stakedBalance","tokenBalance","liquidityid","onStake","location","useLocation","stakedBalanceNumber","getBalanceNumber","useModal","onPresentDeposit","onPresentWithdraw","some","item","pathname","includes","useLiquidityHarvest","getReward","ViewMode","HarvestAction","earnings","earningToken","onReward","rawEarningsBalance","Action","LiquidityPoolCardActions","requestedApproval","setRequestedApproval","userData","allowanceAsString","tokenBalanceAsString","stakedBalanceAsString","earningsAsString","lpName","toUpperCase","isApproved","isGreaterThan","toastError","approveState","onApprove","handleApprove","pr","UnlockButton","ApyButton","cakePrice","toNumber","onPresentApyModal","event","stopPropagation","FCard","card","background","radii","Divider","borderColor","ExpandingWrapper","Liquiditypoolcard","showExpandableSection","setShowExpandableSection","liquidityvalue","earnLabel","farmAPR","liquidityUrlPathParts","quoteToken","token","isCommunity","display","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Container","textSubtle","AprWrapper","Apr","originalValue","hideButton","Farm","useFarmUser","rawStakedBalance","Amount","span","earned","textDisabled","Earned","userDataReady","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","ReferenceElement","LiquidityWrapper","lg","Liquidity","displayLiquidity","useTooltip","placement","tooltipOffset","targetRef","tooltipVisible","ActionContainer","xl","ActionTitles","Title","secondary","Subtle","ActionContent","Staked","earningsBigNumber","isZero","useCountUp","start","end","duration","separator","countUp","update","updateValue","marginBottom","marginTop","expandAnimation","keyframes","collapseAnimation","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","farm","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","translationId","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isXs","tableSchema","columnNames","column","Object","keys","key","columnIndex","indexOf","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","LiquiditypoolTab","showHistory","setShowHistory","hasStakeInFinishedFarms","activeIndex","onItemClick","index","show","InputWrapper","SearchInput","onChangeCallback","setToggled","searchText","setSearchText","debouncedOnChange","debounce","target","onBlur","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","Liquiditypools","useLiquidityPools","farmsLP","userDataLoaded","query","setQuery","usePersistState","setViewMode","stakedOnly","setStakedOnly","sortOption","setSortOption","prices","useGetApiPrices","fastRefresh","useRefresh","fetchFarmsPublicDataAsync","inactiveFarms","filter","activeFarms","stakedOnlyFarms","stakedInactiveFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","quoteTokenPriceUsd","toLowerCase","totalLiquidity","lowercaseQuery","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","farmsStaked","farms","orderBy","sortFarms","slice","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","image","toLocaleLowerCase","FarmsPageHeader","as","Page","checked","marginLeft","sort","b","renderContent","Liquiditypoolsagent","useFetchPublicData","Liquiditypoolwrapper","RefreshContext","isDisabled","unit","previousValue","_interopDefault","ex","defineProperty","exports","PropTypes","require","React__default","CountUp$1","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","enumerable","configurable","writable","_defineProperty","obj","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","_slicedToArray","arr","Array","isArray","_arrayWithHoles","Symbol","iterator","prototype","_arr","_n","_d","_e","_s","_i","next","done","err","_iterableToArrayLimit","_nonIterableRest","createCountUpInstance","el","decimal","easingFn","formattingFn","prefix","suffix","useEasing","useGrouping","CountUp","_Component","_getPrototypeOf2","_this","this","_len","arguments","args","_key","concat","HTMLElement","SVGTextElement","SVGTSpanElement","_assertThisInitialize","reset","restart","onPauseResume","pauseResume","_assertThisInitialize2","onReset","_assertThisInitialize3","_this$props","delay","onEnd","onStart","run","newEnd","_assertThisInitialize4","onUpdate","createRef","protoProps","staticProps","subClass","superClass","create","constructor","_inherits","_this$props2","createInstance","nextProps","_this$props3","redraw","prevProps","_this$props4","preserveValue","_this$props5","className","countUpRef","Component","string","number","func","isRequired","bool","startOnMount","MOCK_ELEMENT","innerHTML","default","_props","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread2","_useState2","count","setCount","getCountUp","newCountUp","formattingFnRef","timeout","CoreTag","outline","startIcon","CommunityTag","ManualPoolTag","CompoundingPoolTag","useAuth","login","logout","chainId","useActiveWeb3React","activeChainId","getENVChainId","onPresentConnectModal","useWalletModal","define","n","r","abs","numerals","u","isNaN","version","m","hasOwnProperty","d","c","f","window","requestAnimationFrame","cancelAnimationFrame","Date","getTime","initialize","initialized","document","getElementById","startVal","endVal","dec","countDown","frameVal","printValue","tagName","textContent","startTime","timestamp","remaining","round","rAF","paused","FlexLayout","initialValue","localStorageKey","valueFromLS","localStorage","getItem","JSON","parse","setValue","setItem","stringify","Outer","Box","gradients","bubblegum","Inner","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","parseFloat"],"mappings":"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","file":"static/js/5.215a583d.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {earningTokenSymbol} {t('per')} $1000\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Box mb=\"28px\" maxWidth=\"280px\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {t(\n            `Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.`,\n            { freq: compoundFrequency.toLocaleString() },\n          )}\n        </Text>\n        {performanceFee > 0 && (\n          <Text mt=\"14px\" fontSize=\"12px\" color=\"textSubtle\">\n            {t(`All estimated rates take into account this pool's %fee%% performance fee`, { fee: performanceFee })}\n          </Text>\n        )}\n      </Box>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from 'uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import { getWETH, getETH } from 'sdk'\n\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\n  const wethAddressString = getWETH()?.address\n\n  const ethSymbol = getETH()?.symbol\n\n  const quoteTokenAddressString: string = quoteTokenAddress \n\n  const tokenAddressString: string = tokenAddress \n\n  const firstPart =\n    !quoteTokenAddressString || quoteTokenAddressString === wethAddressString ? ethSymbol : quoteTokenAddressString\n \n  const secondPart = !tokenAddressString || tokenAddressString === wethAddressString ? ethSymbol : tokenAddressString\n \n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, TimerIcon, Skeleton } from 'uikit'\nimport { useBlock } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport { LiquidityPoolWithStakedValue } from './types'\n\nexport interface ExpandableSectionProps {\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n  liquidity : LiquidityPoolWithStakedValue\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n  liquidity\n}) => {\n  const { t } = useTranslation()\n\n  const { currentBlock } = useBlock()\n\n  const { startBlock, endBlock } = liquidity\n\n  const shouldShowBlockCountdown = (startBlock > 0)\n\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        <Text>{totalValueFormatted}</Text>\n      </Flex>\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('End') : t('Start')}:</Text>\n          <Flex alignItems=\"center\">\n            {blocksRemaining || blocksUntilStart ? (\n              <Balance\n                color=\"primary\"\n                fontSize=\"14px\"\n                value={hasPoolStarted ? blocksRemaining : blocksUntilStart}\n                decimals={0}\n              />\n            ) : (\n              <Skeleton width=\"54px\" height=\"21px\" />\n            )}\n            <Text ml=\"4px\" color=\"primary\" small>\n              {t('blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Flex>\n        </Flex>\n      )}\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>{t(\"getLP\", { name: lpLabel })}</StyledLinkExternal>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from 'uikit'\nimport { CommunityTag, CoreTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  isCommunityFarm?: boolean\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  isCommunityFarm,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useCallback, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { MaxUint256 } from '@ethersproject/constants'\nimport { useWeb3React } from '@web3-react/core'\nimport {  Liquidity } from 'sdk'\nimport { getLiquidityPoolContractAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { calculateGasMargin } from '../utils'\nimport { ApprovalState } from './useApproveCallback'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nexport default function useLiquidityApprove(\n  liquidity: Liquidity, liquidityId, callback: any\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useWeb3React()\n\n  const dispatch = useAppDispatch()\n  \n  const liquidityPoolContract = getLiquidityPoolContractAddress(liquidityId)\n\n  const liquidityContract = useTokenContract(liquidity.address)\n\n  const inputs = useMemo(() => [account, liquidityPoolContract], [account, liquidityPoolContract])\n\n  const allowance = useSingleCallResult(liquidityContract, 'allowance', inputs).result\n\n  const [ currentallowance ] = useMemo(() => [allowance ? new BigNumber(allowance.toString()) : undefined], [allowance])\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!liquidity || !liquidityPoolContract) return ApprovalState.UNKNOWN\n\n    if (!currentallowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentallowance.gt(0) ? ApprovalState.APPROVED : ApprovalState.NOT_APPROVED\n  }, [liquidity, liquidityPoolContract, currentallowance])\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n\n      return\n    }\n\n    if (!liquidityContract) {\n      console.error('liquidityContract is null')\n\n      return\n    }\n\n    if (!liquidityPoolContract) {\n      console.error('no spender')\n\n      return\n    }\n\n    const estimatedGas = await liquidityContract.estimateGas.approve(liquidityPoolContract, MaxUint256)\n\n    // eslint-disable-next-line consistent-return\n    liquidityContract\n           .approve(liquidityPoolContract, MaxUint256, { gasLimit: calculateGasMargin(estimatedGas) })\n           .then(() => {\n            dispatch(fetchFarmUserDataAsync(account))\n\n            callback()\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, liquidityContract, liquidityPoolContract, dispatch, account, callback])\n\n  return [approvalState, approve]\n}\n\n \n \n","import { BIG_TEN } from 'sdk'\nimport { useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { useLiquidityPoolContract } from './useContract'\nimport { calculateGasMargin } from '../utils'\n\nexport default function useLiquidityStake(\n  liquidityId, callback: any\n): [ (amount: string, decimals: number) => Promise<void>] {\n  const { account } = useWeb3React()\n\n  const dispatch = useAppDispatch()\n\n  const liquidityPoolContract = useLiquidityPoolContract(liquidityId)\n  \n  const onStake = useCallback(async (amount: string, decimals = 18): Promise<void> => {\n    if (!liquidityPoolContract) {\n      console.error('liquidity pool contract is null')\n\n      return\n    }\n\n    const estimatedGas = await liquidityPoolContract.estimateGas.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n                                                      \n    // eslint-disable-next-line consistent-return\n    liquidityPoolContract\n           .deposit((new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString()), { gasLimit: calculateGasMargin(estimatedGas) })\n           .then(() => {\n              dispatch(fetchFarmUserDataAsync(account))\n\n              callback()\n      })\n      .catch((error: Error) => {\n        console.error('Failed to stake token', error)\n        throw error\n      })\n    \n  }, [liquidityPoolContract, dispatch, account, callback])\n\n  return [ onStake ]\n}","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { BIG_TEN } from 'sdk'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { useLiquidityPoolContract } from './useContract'\nimport { calculateGasMargin } from '../utils'\n\nexport default function useLiquidityUnstake(\n  liquidityId, enableEmergencyWithdraw = false, callback: any\n): [ (amount: string, decimals: number) => Promise<void>] {\n  const { account } = useWeb3React()\n\n  const dispatch = useAppDispatch()\n\n  const liquidityPoolContract = useLiquidityPoolContract(liquidityId)\n  \n  const onUnstake = useCallback(async (amount: string, decimals = 18): Promise<void> => {\n    if (!liquidityPoolContract) {\n      console.error('liquidity pool contract is null')\n\n      return\n    }\n\n    if (enableEmergencyWithdraw) {\n      const estimatedGas_em = await liquidityPoolContract.estimateGas.emergencyWithdraw()\n                                                      \n      // eslint-disable-next-line consistent-return\n      liquidityPoolContract\n             .emergencyWithdraw({ gasLimit: calculateGasMargin(estimatedGas_em) })\n             .then(() => {\n                callback()\n  \n                dispatch(fetchFarmUserDataAsync(account))\n        })\n        .catch((error: Error) => {\n          console.error('Failed to approve token', error)\n          throw error\n        })\n    } \n    else {\n      const estimatedGas = await liquidityPoolContract.estimateGas.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n                                                      \n      // eslint-disable-next-line consistent-return\n      liquidityPoolContract\n             .withdraw((new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString()), { gasLimit: calculateGasMargin(estimatedGas) })\n             .then(() => {  \n                dispatch(fetchFarmUserDataAsync(account))\n\n                callback()\n        })\n        .catch((error: Error) => {\n          console.error('Failed to unstake token', error)\n          throw error\n        })\n    }\n    \n  }, [liquidityPoolContract, dispatch, account, callback, enableEmergencyWithdraw])\n\n  return [ onUnstake ]\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n    const balanceNumber = Number(balance)\n    if (balanceNumber > 0 && balanceNumber < 0.0001) {\n      return balanceNumber.toLocaleString(undefined, { maximumFractionDigits: 20 })\n    }\n    return balanceNumber.toLocaleString()\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">\n            {t('Balance')}: {displayBalance(max)}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern=\"^[0-9]*[.,]?[0-9]*$\"\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t(\"No tokens to stake\")}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('get')} {symbol}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n\n  onConfirm: (amount: string, decimals: number) => void\n\n  decimals: number\n\n  onDismiss?: () => void\n\n  tokenName?: string\n\n  addLiquidityUrl?: string,\n\n  setCallback: any\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, decimals, onDismiss, tokenName = '', addLiquidityUrl, setCallback }) => {\n  const [val, setVal] = useState('')\n\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const { t } = useTranslation()\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const { toastSuccess } = useToast()\n\n  setCallback(()=>\n  {\n    toastSuccess(`${t('Staked')}!`, t(`Your staking funds have been staked in the pool!`))\n\n    setPendingTx(false)\n    \n    onDismiss()\n  })\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, decimals)\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('getLP', { name: tokenName })}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n\n  onConfirm: (amount: string, decimals: number) => void\n\n  decimals: number\n  \n  onDismiss?: () => void\n  \n  tokenName?: string,\n\n  setCallback: any\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, decimals, onDismiss, max, tokenName = '', setCallback }) => {\n  const [val, setVal] = useState('')\n\n  const [pendingTx, setPendingTx] = useState(false)\n  \n  const { t } = useTranslation()\n  \n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const { toastSuccess } = useToast()\n\n  setCallback(()=>\n  {\n    toastSuccess(\n      `${t('Unstaked')}!`,\n      t(`Your earnings have also been harvested to your wallet!`),\n    )\n\n    setPendingTx(false)\n    \n    onDismiss()\n  })\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, decimals)\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from 'uikit'\nimport { useLocation } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport useLiquidityStake from 'hooks/useLiquidityStake'\nimport useLiquidityUnstake from 'hooks/useLiquidityUnstake'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface StakeActionsProps {\n  stakedBalance?: BigNumber\n\n  tokenBalance?: BigNumber\n\n  tokenName?: string\n\n  liquidityid?: number\n\n  addLiquidityUrl?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  liquidityid,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n\n  let stakeCallbackHander\n\n  const stakeModalCallbackSetting = ((callback)=>\n  {\n    stakeCallbackHander = callback\n  })\n\n  const stakeCallback = () => \n  {\n    if(stakeCallbackHander)\n    {\n      stakeCallbackHander()\n    }\n  }\n\n  const [ onStake ] = useLiquidityStake(liquidityid, stakeCallback)\n\n  let unstakeCallbackHander\n\n  const unstakeModalCallbackSetting = ((callback)=>\n  {\n    unstakeCallbackHander = callback\n  })\n\n\n  const unstakeCallback = () =>\n  {\n    if(unstakeCallbackHander)\n    {\n      unstakeCallbackHander()\n    }\n  }\n\n  const [ onUnstake ] = useLiquidityUnstake(liquidityid, false, unstakeCallback)\n\n  const location = useLocation()\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance)\n\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    \n    return stakedBalanceNumber.toLocaleString()\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} decimals={18} setCallback={stakeModalCallbackSetting} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} decimals={18} tokenName={tokenName} setCallback={unstakeModalCallbackSetting}/>,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n      >\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { useLiquidityPoolContract } from './useContract'\nimport { calculateGasMargin } from '../utils'\n\nexport default function useLiquidityHarvest(\n  liquidityId, callback: any\n): [ () => Promise<void>] {\n  const { account } = useWeb3React()\n\n  const dispatch = useAppDispatch()\n\n  const liquidityPoolContract = useLiquidityPoolContract(liquidityId)\n  \n  const onReward = useCallback(async (): Promise<void> => {\n    if (!liquidityPoolContract) {\n      console.error('liquidity pool contract is null')\n\n      return\n    }\n\n    const estimatedGas = await liquidityPoolContract.estimateGas.getReward()\n                                                      \n    // eslint-disable-next-line consistent-return\n    liquidityPoolContract\n           .getReward({ gasLimit: calculateGasMargin(estimatedGas) })\n           .then(() => {\n              dispatch(fetchFarmUserDataAsync(account))\n\n              callback()\n      })\n      .catch((error: Error) => {\n        console.error('Failed to harvest token', error)\n        throw error\n      })\n    \n  }, [liquidityPoolContract, dispatch, account, callback])\n\n  return [ onReward ]\n}\n\n \n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from 'uikit'\nimport { Token } from 'sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport useLiquidityHarvest from 'hooks/useLiquidityHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\n\ninterface HarvestActionsProps {\n  earnings?: BigNumber\n\n  earningToken: Token\n\n  liquidityid?: number\n}\n\nconst HarvestAction: React.FC<HarvestActionsProps> = ({ earnings, earningToken, liquidityid }) => {\n  const { account } = useWeb3React()\n\n  const { t } = useTranslation()\n  \n  const [pendingTx, setPendingTx] = useState(false)\n\n  const { toastSuccess } = useToast()\n\n  const harvestCallback = ()=>\n  {\n    toastSuccess(`${t('Harvested')}!`, t(`Your earnings have been sent to your wallet!`))\n\n    setPendingTx(false)\n  }\n  \n  const [ onReward ] = useLiquidityHarvest(liquidityid, harvestCallback)\n\n  const rawEarningsBalance = account ? getBalanceNumber(earnings, earningToken.decimals) : 0\n\n  const displayBalance = rawEarningsBalance.toLocaleString()\n    \n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>\n        {displayBalance}\n      </Heading>\n      <Button\n        disabled={rawEarningsBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n        }}\n      >\n        {t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  translationId: number\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    translationId: 736,\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    translationId: 736,\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    translationId: 999,\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { provider as ProviderType } from 'web3-core'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Text } from 'uikit'\nimport { LiquidityPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { ApprovalState } from 'hooks/useApproveCallback'\nimport useLiquidityApprove from 'hooks/useLiquidityApprove'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface LiquidityPoolWithStakedValue extends LiquidityPool {\n  apr?: number\n}\n\ninterface LiquidityPoolCardActionsProps {\n  liquidity: LiquidityPoolWithStakedValue\n\n  provider?: ProviderType\n\n  account?: string\n\n  addLiquidityUrl?: string\n}\n\nconst LiquidityPoolCardActions: React.FC<LiquidityPoolCardActionsProps> = ({ liquidity, account, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n\n  const {\n    allowance: allowanceAsString = 0,\n\n    tokenBalance: tokenBalanceAsString = 0,\n\n    stakedBalance: stakedBalanceAsString = 0,\n\n    earnings: earningsAsString = 0,\n\n  } = liquidity.userData || {}\n\n  const allowance = new BigNumber(allowanceAsString)\n\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\n\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\n\n  const earnings = new BigNumber(earningsAsString)\n\n  const lpName = liquidity.liquidity.symbol.toUpperCase() \n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const { toastSuccess, toastError } = useToast()\n\n  const approveCallback = () =>\n  {\n    toastSuccess(`${t('Contract Enabled')}`, `${t(`You can now stake in the farm!`)}`)\n       \n    setRequestedApproval(false)\n  }\n\n  const [ approveState, onApprove ] = useLiquidityApprove(liquidity.liquidity, liquidity.liquidityid, approveCallback)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n\n      await onApprove()\n\n      if (approveState ===  ApprovalState.UNKNOWN) {\n        // user rejected tx or didn't go thru\n        toastError(\n          `${t('Error')}`,\n          `${t(`Please try again. Confirm the transaction and make sure you are paying enough gas!`)}`,\n        )\n\n        setRequestedApproval(false)\n      }  else if (approveState === ApprovalState.APPROVED)\n      {\n        toastSuccess(`${t('Contract Enabled')}`, `${t(`You can now stake in the farm!`)}`)\n       \n        setRequestedApproval(false)\n      }\n\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, approveState, toastSuccess, toastError, t])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        liquidityid={liquidity.liquidityid}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          {liquidity.earningToken.symbol.toUpperCase()}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} earningToken={liquidity.earningToken} liquidityid={liquidity.liquidityid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default LiquidityPoolCardActions\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from 'uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apr?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apr, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      linkLabel={`${t('getLP', {name : lpLabel})}`}\n      tokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      linkHref={addLiquidityUrl}\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Flex, Text, Skeleton } from 'uikit'\nimport { provider as ProviderType } from 'web3-core'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport LiquidityPoolCardActions from './LiquidityPoolCardActions'\nimport ApyButton from './ApyButton'\nimport { LiquidityPoolWithStakedValue } from './types'\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: ${({ theme }) => (theme.radii.card)};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface LiquiditypoolcardProps {\n  liquidity: LiquidityPoolWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  provider?: ProviderType\n  account?: string\n}\n\nconst Liquiditypoolcard: React.FC<LiquiditypoolcardProps> = ({ liquidity, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted = liquidity.liquidityvalue\n    ? `$${liquidity.liquidityvalue.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = liquidity.liquidity && liquidity.liquidity.symbol.toUpperCase().replace('PANCAKE', '')\n\n  const earnLabel = liquidity.earningToken.symbol\n\n  const farmAPR = liquidity.apr && liquidity.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: liquidity.liquidity.quoteToken.address,\n  \n    tokenAddress: liquidity.liquidity.token.address,\n  })\n\n  const addLiquidityUrl = `#/add/${liquidityUrlPathParts}`\n\n  return (\n    <FCard>\n      <CardHeading\n        lpLabel={lpLabel}\n        isCommunityFarm={liquidity.isCommunity}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{t('APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {liquidity.apr ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apr={liquidity.apr} />\n                {farmAPR}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <LiquidityPoolCardActions liquidity={liquidity} account={account} addLiquidityUrl={addLiquidityUrl} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          liquidity={liquidity}\n          totalValueFormatted={totalValueFormatted}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default Liquiditypoolcard\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from 'uikit'\nimport BigNumber from 'bignumber.js'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport ApyButton from '../Liquiditypoolcard/ApyButton'\n\nexport interface AprProps {\n  value: string\n  lpLabel: string\n  tokenAddress?: string\n  quoteTokenAddress?: string\n  cakePrice?: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `#/add/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          <AprWrapper>{value}%</AprWrapper>\n          {!hideButton && (\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apr={originalValue} addLiquidityUrl={addLiquidityUrl} />\n          )}\n        </>\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from 'uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport interface FarmProps {\n  label: string\n  liquidityid: number\n  image: string\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ label, liquidityid }) => {\n  const { stakedBalance } = useFarmUser(liquidityid)\n\n  const { t } = useTranslation()\n  \n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from 'uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  liquidityid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\nexport interface LiquidityProps {\n  liquidityvalue: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidityvalue }) => {\n  const displayLiquidity = liquidityvalue ? (\n    `$${Number(liquidityvalue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n  ) : (\n    <Skeleton width={60} />\n  )\n\n  const { t } = useTranslation()\n  \n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('The total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n  margin-bottom: 8px;\n`\n\nexport const Title = styled.span`\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport const Subtle = styled.span`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const Earned = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.text};\n`\n\nexport const Staked = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Button, Skeleton } from 'uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useLiquidityHarvest from 'hooks/useLiquidityHarvest'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCountUp } from 'react-countup'\nimport useToast from 'hooks/useToast'\nimport { LiquidityPoolWithStakedValue } from '../../Liquiditypoolcard/types'\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\n\ninterface HarvestActionProps extends LiquidityPoolWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ liquidityid, earningToken, userData, userDataReady }) => {\n  const earningsBigNumber = new BigNumber(userData.earnings)\n\n  let earnings = 0\n\n  const earningsBusd = 0\n\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceNumber(earningsBigNumber, earningToken.decimals)\n \n    displayBalance = earnings.toLocaleString()\n  }\n\n  const { toastSuccess } = useToast()\n\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const harvestCallback = ()=>\n  {\n    toastSuccess(`${t('Harvested')}!`, t(`Your earnings have been sent to your wallet!`))\n\n    setPendingTx(false)\n  }\n\n  const [ onReward ] = useLiquidityHarvest(liquidityid, harvestCallback)\n\n  const { t } = useTranslation()\n\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: earningsBusd,\n    duration: 1,\n    separator: ',',\n    decimals: 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(earningsBusd)\n  }, [earningsBusd, updateValue])\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Title>{earningToken.symbol.toUpperCase()} </Title>\n        <Subtle>{t('Earned')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          {countUp > 0 && <Staked>~{countUp}USD</Staked>}\n        </div>\n        <Button\n          disabled={!earnings || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n          }}\n          ml=\"4px\"\n        >\n          {t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton } from 'uikit'\nimport { useLocation } from 'react-router-dom'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useLiquidityApprove from 'hooks/useLiquidityApprove'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { ApprovalState } from 'hooks/useApproveCallback'\nimport useLiquidityStake from 'hooks/useLiquidityStake'\nimport useLiquidityUnstake from 'hooks/useLiquidityUnstake'\nimport { LiquidityPoolWithStakedValue } from '../../Liquiditypoolcard/types'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends LiquidityPoolWithStakedValue {\n  userDataReady: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  liquidityid,\n  liquidity,\n  userDataReady,\n}) => {\n  const { t } = useTranslation()\n\n  const { account } = useWeb3React()\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(liquidityid)\n\n  const { toastSuccess, toastError } = useToast()\n\n  let stakeCallbackHander\n\n  const stakeModalCallbackSetting = ((callback)=>\n  {\n    stakeCallbackHander = callback\n  })\n\n  const stakeCallback = () =>\n  {\n    if(stakeCallbackHander)\n    {\n      stakeCallbackHander()\n    }\n  }\n\n  const [ onStake ] = useLiquidityStake(liquidityid, stakeCallback)\n\n  let unstakeCallbackHander\n\n  const unstakeModalCallbackSetting = ((callback)=>\n  {\n    unstakeCallbackHander = callback\n  })\n\n  const unstakeCallback = () =>\n  {\n     if(unstakeCallbackHander)\n     {\n       unstakeCallbackHander()\n     }\n  }\n\n  const [ onUnstake ] = useLiquidityUnstake(liquidityid, false, unstakeCallback)\n\n  const location = useLocation()\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: liquidity.quoteToken.address,\n\n    tokenAddress: liquidity.token.address,\n  })\n  const addLiquidityUrl = `#/add/${liquidityUrlPathParts}`\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance)\n\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n\n    return stakedBalanceNumber.toLocaleString()\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={liquidity.symbol} decimals={18} setCallback={stakeModalCallbackSetting} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={stakedBalance} onConfirm={onUnstake} decimals={18} tokenName={liquidity.symbol} setCallback={unstakeModalCallbackSetting} />)\n\n  const approveCallback = () =>\n  {\n    toastSuccess(`${t('Contract Enabled')}`, `${t(`You can now stake in the farm!`)}`)\n       \n    setRequestedApproval(false)\n  }\n\n  const [ approveState, onApprove ] = useLiquidityApprove(liquidity, liquidityid, approveCallback)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n\n      await onApprove()\n\n      if (approveState ===  ApprovalState.UNKNOWN) {\n        // user rejected tx or didn't go thru\n        toastError(\n          `${t('Error')}`,\n          `${t(`Please try again. Confirm the transaction and make sure you are paying enough gas!`)}`,\n        )\n\n        setRequestedApproval(false)\n      }  else if (approveState === ApprovalState.APPROVED)\n      {\n        toastSuccess(`${t('Contract Enabled')}`, `${t(`You can now stake in the farm!`)}`)\n       \n        setRequestedApproval(false)\n      }\n\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, approveState, toastSuccess, toastError, t])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{t('Start Farming')}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Title>{liquidity.symbol} </Title>\n            <Subtle>{t('Staked')}</Subtle>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance()}</Earned>\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{t('Stake')} </Subtle>\n          <Title>{liquidity.symbol}</Title>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{t('Start Farming')}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Subtle>{t('ENABLE FARM')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text, TimerIcon, Skeleton, Flex } from 'uikit'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { CommunityTag, CoreTag } from 'components/Tags'\nimport { useBlock } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport { LiquidityPoolWithStakedValue } from '../../Liquiditypoolcard/types'\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  liquidity: LiquidityProps\n  details: LiquidityPoolWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n\n  const { currentBlock } = useBlock()\n\n  const { startBlock, endBlock } = farm\n\n  const shouldShowBlockCountdown = (startBlock > 0)\n\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n\n  const isActive = true\n\n  const { quoteToken, token } = farm.liquidity\n\n  const lpLabel = farm.liquidity.symbol && farm.liquidity.symbol.toUpperCase().replace('PANCAKE', '')\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n\n    tokenAddress: token.address,\n  })\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`#/add/${liquidityUrlPathParts}`}>\n              {t('getLP', { name: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n\n        <TagsContainer>\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\n        </TagsContainer>\n\n        {shouldShowBlockCountdown && (\n        <Flex mt=\"15px\" mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('End') : t('Start')}:</Text>\n          <Flex alignItems=\"center\">\n            {blocksRemaining || blocksUntilStart ? (\n              <Balance\n                color=\"primary\"\n                fontSize=\"14px\"\n                value={hasPoolStarted ? blocksRemaining : blocksUntilStart}\n                decimals={0}\n              />\n            ) : (\n              <Skeleton width=\"54px\" height=\"21px\" />\n            )}\n            <Text ml=\"4px\" color=\"primary\" small>\n              {t('blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Flex>\n        </Flex>\n      )}\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/hooks'\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { LiquidityPoolWithStakedValue } from '../Liquiditypoolcard/types'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  liquidity: LiquidityProps\n  details: LiquidityPoolWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n\n  const hasStakedAmount = !!useFarmUser(details.liquidityid).stakedBalance.toNumber()\n\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  \n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Flex,\n  NotificationDot,\n} from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst LiquiditypoolTab = ({ showHistory, setShowHistory, hasStakeInFinishedFarms }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Flex alignItems=\"center\" flexDirection={['column', null, 'row', null]}>\n        <ButtonMenu activeIndex={showHistory ? 1 : 0} onItemClick={(index) => setShowHistory(index === 1)} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem>\n            {t('Live')}\n          </ButtonMenuItem>\n          <NotificationDot show={hasStakeInFinishedFarms}>\n            <ButtonMenuItem>\n              {t('Finished')}\n            </ButtonMenuItem>\n          </NotificationDot>\n        </ButtonMenu>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default LiquiditypoolTab\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React, { useState, useMemo } from 'react'\nimport { Input } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 234px;\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(\"Search farms\")}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from 'uikit'\nimport { ViewMode } from './types'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\r\nimport { useAppDispatch } from 'state'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, RowType, Toggle, Text } from 'uikit'\r\nimport styled from 'styled-components'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useLiquidityPools, useGetApiPrices, useBlock } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { LiquidityPool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { orderBy } from 'lodash'\r\nimport { latinise } from 'utils/latinise'\r\nimport FarmsPageHeader from 'components/FarmsPageHeader'\r\nimport { fetchFarmsPublicDataAsync } from 'state/liquiditypools'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport Liquiditypoolcard from './components/Liquiditypoolcard/Liquiditypoolcard'\r\nimport { LiquidityPoolWithStakedValue } from './components/Liquiditypoolcard/types'\r\nimport Table from './components/Liquiditypooltable/FarmTable'\r\nimport LiquiditypoolTab from './LiquiditypoolTab'\r\nimport SearchInput from './components/SearchInput'\r\nimport { RowProps } from './components/Liquiditypooltable/Row'\r\nimport ToggleView from './components/ToggleView'\r\nimport { DesktopColumnSchema, ViewMode } from './components/types'\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\nconst NUMBER_OF_FARMS_VISIBLE = 12\r\n\r\nconst Liquiditypools: React.FC = () => {\r\n  const { t } = useTranslation()\r\n\r\n  const { data: farmsLP, userDataLoaded } = useLiquidityPools()\r\n\r\n  const [query, setQuery] = useState('')\r\n\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, 'grampus_farm_view')\r\n\r\n  const [stakedOnly, setStakedOnly] = usePersistState(false, 'grampus_farm_pool_staked')\r\n\r\n  const [showHistory, setShowHistory] = usePersistState(true, 'grampus_farm_pool_history')\r\n\r\n  const { account } = useWeb3React()\r\n\r\n  const [sortOption, setSortOption] = useState('hot')\r\n\r\n  const prices = useGetApiPrices()\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  // Users with no wallet connected should see 0 as Earned amount\r\n  // Connected users should see loading indicator until first userData has loaded\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n\r\n    if (account) {\r\n     dispatch(fetchFarmUserDataAsync(account))  \r\n    }\r\n  }, [dispatch, account])\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  const inactiveFarms = farmsLP.filter((farm) => (currentBlock >= farm.endBlock && farm.endBlock > 0))\r\n  \r\n  const activeFarms = farmsLP.filter((farm) => (currentBlock < farm.endBlock))\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedInactiveFarms = inactiveFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay: LiquidityPool[]): LiquidityPoolWithStakedValue[] => {\r\n      let farmsToDisplayWithAPR: LiquidityPoolWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.lpTotalInQuoteToken || !prices) {\r\n          return farm\r\n        }\r\n\r\n        const quoteTokenPriceUsd = prices[farm.liquidity.quoteToken.address.toLowerCase()]\r\n\r\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\r\n\r\n        const apr = 0\r\n\r\n        return { ...farm, apr, liquidityvalue: totalLiquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = latinise(query.toLowerCase())\r\n\r\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: LiquidityPoolWithStakedValue) => {\r\n          return latinise(farm.liquidity.symbol.toLowerCase()).includes(lowercaseQuery)\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPR\r\n    },\r\n    [prices, query],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n\r\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\r\n\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n\r\n  const farmsStakedMemoized = useMemo(() => {\r\n    let farmsStaked = []\r\n\r\n    const sortFarms = (farms: LiquidityPoolWithStakedValue[]): LiquidityPoolWithStakedValue[] => {\r\n      switch (sortOption) {\r\n        case 'apr':\r\n          return orderBy(farms, (farm: LiquidityPoolWithStakedValue) => farm.apr, 'desc')\r\n \r\n        case 'earned':\r\n          return orderBy(\r\n            farms,\r\n            (farm: LiquidityPoolWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\r\n            'desc',\r\n          )\r\n        case 'liquidity':\r\n          return orderBy(farms, (farm: LiquidityPoolWithStakedValue) => Number(farm.liquidity), 'desc')\r\n        default:\r\n          return farms\r\n      }\r\n    }\r\n\r\n    if (!showHistory) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\r\n    }\r\n\r\n    if (showHistory) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\r\n    }\r\n\r\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\r\n  }, [\r\n    sortOption,\r\n    activeFarms,\r\n    farmsList,\r\n    inactiveFarms,\r\n    showHistory,\r\n    stakedInactiveFarms,\r\n    stakedOnly,\r\n    stakedOnlyFarms,\r\n    numberOfFarmsVisible,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const showMoreFarms = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [farmsStakedMemoized, observerIsSet])\r\n\r\n  const rowData = farmsStakedMemoized.map((farm) => {\r\n    const { token, quoteToken } = farm.liquidity\r\n\r\n    const tokenAddress = token.address\r\n\r\n    const quoteTokenAddress = quoteToken.address\r\n    \r\n    const lpLabel = farm.liquidity.symbol && farm.liquidity.symbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\r\n\r\n    const row: RowProps = {\r\n      apr: {\r\n        value: farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\r\n        lpLabel,\r\n        tokenAddress,\r\n        quoteTokenAddress,\r\n        originalValue: farm.apr,\r\n      },\r\n\r\n      farm: {\r\n        image: farm.liquidity.symbol.split(' ')[0].toLocaleLowerCase(),\r\n        label: lpLabel,\r\n        liquidityid: farm.liquidityid,\r\n      },\r\n\r\n      earned: {\r\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings), farm.earningToken.decimals),\r\n        liquidityid: farm.liquidityid,\r\n      },\r\n\r\n      liquidity: {\r\n        liquidityvalue: farm.liquidityvalue,\r\n      },\r\n\r\n      details: farm,\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n          switch (column.name) {\r\n            case 'farm':\r\n              return b.id - a.id\r\n            case 'apr':\r\n              if (a.original.apr.value && b.original.apr.value) {\r\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          { !showHistory ? \r\n                <FlexLayout>\r\n            {farmsStakedMemoized.map((farm) => (\r\n              <Liquiditypoolcard key={farm.liquidityid} liquidity={farm} account={account} removed={false} />\r\n            ))}\r\n           </FlexLayout>\r\n         :         <FlexLayout>\r\n            {farmsStakedMemoized.map((farm) => (\r\n              <Liquiditypoolcard key={farm.liquidityid} liquidity={farm} account={account} removed />\r\n            ))}\r\n         </FlexLayout>\r\n         }\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FarmsPageHeader>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n          {t('Liquidity Pools')}\r\n        </Heading>\r\n        <Heading scale=\"lg\" color=\"text\">\r\n          {t('Stake lp tokens to earn new tokens')}\r\n        </Heading>\r\n      </FarmsPageHeader>\r\n      <Page>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n            <ToggleWrapper>\r\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\r\n              <Text> {t('Staked only')}</Text>\r\n            </ToggleWrapper>\r\n            <LiquiditypoolTab showHistory={showHistory} setShowHistory={setShowHistory} hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text>{t(\"Sort by\")}</Text>\r\n              <Select\r\n                options={[\r\n                  {\r\n                    label: t('Hot'),\r\n                    value: 'hot',\r\n                  },\r\n                  {\r\n                    label: t('APR'),\r\n                    value: 'apr',\r\n                  },\r\n                  {\r\n                    label: t('Earned'),\r\n                    value: 'earned',\r\n                  },\r\n                  {\r\n                    label: t('Liquidity'),\r\n                    value: 'liquidity',\r\n                  },\r\n                ]}\r\n                onChange={handleSortOptionChange}\r\n              />\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text>{t(\"Search\")}</Text>\r\n              <SearchInput onChange={handleChangeQuery} />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        <div ref={loadMoreRef} />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n \r\nexport default Liquiditypools","import React from 'react'\r\nimport { useFetchPublicData } from 'state/hooks'\r\nimport Liquiditypools from './Liquiditypools'\r\n\r\nconst Liquiditypoolsagent : React.FC = () => {\r\n    useFetchPublicData()\r\n\r\n    return (\r\n     <>\r\n       <Liquiditypools />\r\n     </>\r\n    );\r\n}\r\n\r\nexport default Liquiditypoolsagent","import React from 'react'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport Liquiditypoolsagent from './Liquiditypoolsagent'\r\n\r\nconst Liquiditypoolwrapper: React.FC = () => {\r\n    return (\r\n      <RefreshContextProvider>\r\n        <Liquiditypoolsagent />\r\n      </RefreshContextProvider>\r\n    );\r\n}\r\n\r\nexport default Liquiditypoolwrapper","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text } from 'uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n  bold?: boolean\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit, bold, ...props }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text bold={bold} color={isDisabled ? 'textDisabled' : color} fontSize={fontSize} {...props}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar PropTypes = _interopDefault(require('prop-types'));\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar warning = _interopDefault(require('warning'));\nvar CountUp$1 = _interopDefault(require('countup.js'));\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar createCountUpInstance = function createCountUpInstance(el, props) {\n  var decimal = props.decimal,\n      decimals = props.decimals,\n      duration = props.duration,\n      easingFn = props.easingFn,\n      end = props.end,\n      formattingFn = props.formattingFn,\n      prefix = props.prefix,\n      separator = props.separator,\n      start = props.start,\n      suffix = props.suffix,\n      useEasing = props.useEasing;\n  return new CountUp$1(el, start, end, decimals, duration, {\n    decimal: decimal,\n    easingFn: easingFn,\n    formattingFn: formattingFn,\n    separator: separator,\n    prefix: prefix,\n    suffix: suffix,\n    useEasing: useEasing,\n    useGrouping: !!separator\n  });\n};\n\nvar CountUp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CountUp, _Component);\n\n  function CountUp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CountUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CountUp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"createInstance\", function () {\n      if (typeof _this.props.children === 'function') {\n        // Warn when user didn't use containerRef at all\n        warning(_this.containerRef.current && (_this.containerRef.current instanceof HTMLElement || _this.containerRef.current instanceof SVGTextElement || _this.containerRef.current instanceof SVGTSpanElement), \"Couldn't find attached element to hook the CountUp instance into! Try to attach \\\"containerRef\\\" from the render prop to a an HTMLElement, eg. <span ref={containerRef} />.\");\n      }\n\n      return createCountUpInstance(_this.containerRef.current, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pauseResume\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          reset = _assertThisInitialize.reset,\n          start = _assertThisInitialize.restart,\n          update = _assertThisInitialize.update;\n\n      var onPauseResume = _this.props.onPauseResume;\n\n      _this.instance.pauseResume();\n\n      onPauseResume({\n        reset: reset,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize2.pauseResume,\n          start = _assertThisInitialize2.restart,\n          update = _assertThisInitialize2.update;\n\n      var onReset = _this.props.onReset;\n\n      _this.instance.reset();\n\n      onReset({\n        pauseResume: pauseResume,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"restart\", function () {\n      _this.reset();\n\n      _this.start();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize3.pauseResume,\n          reset = _assertThisInitialize3.reset,\n          start = _assertThisInitialize3.restart,\n          update = _assertThisInitialize3.update;\n\n      var _this$props = _this.props,\n          delay = _this$props.delay,\n          onEnd = _this$props.onEnd,\n          onStart = _this$props.onStart;\n\n      var run = function run() {\n        return _this.instance.start(function () {\n          return onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: start,\n            update: update\n          });\n        });\n      }; // Delay start if delay prop is properly set\n\n\n      if (delay > 0) {\n        _this.timeoutId = setTimeout(run, delay * 1000);\n      } else {\n        run();\n      }\n\n      onStart({\n        pauseResume: pauseResume,\n        reset: reset,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (newEnd) {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize4.pauseResume,\n          reset = _assertThisInitialize4.reset,\n          start = _assertThisInitialize4.restart;\n\n      var onUpdate = _this.props.onUpdate;\n\n      _this.instance.update(newEnd);\n\n      onUpdate({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: start\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", React__default.createRef());\n\n    return _this;\n  }\n\n  _createClass(CountUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          delay = _this$props2.delay;\n      this.instance = this.createInstance(); // Don't invoke start if component is used as a render prop\n\n      if (typeof children === 'function' && delay !== 0) return; // Otherwise just start immediately\n\n      this.start();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props3 = this.props,\n          end = _this$props3.end,\n          start = _this$props3.start,\n          suffix = _this$props3.suffix,\n          prefix = _this$props3.prefix,\n          redraw = _this$props3.redraw,\n          duration = _this$props3.duration,\n          separator = _this$props3.separator,\n          decimals = _this$props3.decimals,\n          decimal = _this$props3.decimal;\n      var hasCertainPropsChanged = duration !== nextProps.duration || end !== nextProps.end || start !== nextProps.start || suffix !== nextProps.suffix || prefix !== nextProps.prefix || separator !== nextProps.separator || decimals !== nextProps.decimals || decimal !== nextProps.decimal;\n      return hasCertainPropsChanged || redraw;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // If duration, suffix, prefix, separator or start has changed\n      // there's no way to update the values.\n      // So we need to re-create the CountUp instance in order to\n      // restart it.\n      var _this$props4 = this.props,\n          end = _this$props4.end,\n          start = _this$props4.start,\n          suffix = _this$props4.suffix,\n          prefix = _this$props4.prefix,\n          duration = _this$props4.duration,\n          separator = _this$props4.separator,\n          decimals = _this$props4.decimals,\n          decimal = _this$props4.decimal,\n          preserveValue = _this$props4.preserveValue;\n\n      if (duration !== prevProps.duration || start !== prevProps.start || suffix !== prevProps.suffix || prefix !== prevProps.prefix || separator !== prevProps.separator || decimals !== prevProps.decimals || decimal !== prevProps.decimal) {\n        this.instance.reset();\n        this.instance = this.createInstance();\n        this.start();\n      } // Only end value has changed, so reset and and re-animate with the updated\n      // end value.\n\n\n      if (end !== prevProps.end) {\n        if (!preserveValue) {\n          this.instance.reset();\n        }\n\n        this.instance.update(end);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n      }\n\n      this.instance.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          style = _this$props5.style;\n      var containerRef = this.containerRef,\n          pauseResume = this.pauseResume,\n          reset = this.reset,\n          restart = this.restart,\n          update = this.update;\n\n      if (typeof children === 'function') {\n        return children({\n          countUpRef: containerRef,\n          pauseResume: pauseResume,\n          reset: reset,\n          start: restart,\n          update: update\n        });\n      }\n\n      return React__default.createElement(\"span\", {\n        className: className,\n        ref: containerRef,\n        style: style\n      });\n    }\n  }]);\n\n  return CountUp;\n}(React.Component);\n\n_defineProperty(CountUp, \"propTypes\", {\n  decimal: PropTypes.string,\n  decimals: PropTypes.number,\n  delay: PropTypes.number,\n  easingFn: PropTypes.func,\n  end: PropTypes.number.isRequired,\n  formattingFn: PropTypes.func,\n  onEnd: PropTypes.func,\n  onStart: PropTypes.func,\n  prefix: PropTypes.string,\n  redraw: PropTypes.bool,\n  separator: PropTypes.string,\n  start: PropTypes.number,\n  startOnMount: PropTypes.bool,\n  suffix: PropTypes.string,\n  style: PropTypes.object,\n  useEasing: PropTypes.bool,\n  preserveValue: PropTypes.bool\n});\n\n_defineProperty(CountUp, \"defaultProps\", {\n  decimal: '.',\n  decimals: 0,\n  delay: null,\n  duration: null,\n  easingFn: null,\n  formattingFn: null,\n  onEnd: function onEnd() {},\n  onPauseResume: function onPauseResume() {},\n  onReset: function onReset() {},\n  onStart: function onStart() {},\n  onUpdate: function onUpdate() {},\n  prefix: '',\n  redraw: false,\n  separator: '',\n  start: 0,\n  startOnMount: true,\n  suffix: '',\n  style: undefined,\n  useEasing: true,\n  preserveValue: false\n});\n\n// and just sets the innerHTML of the element.\n\nvar MOCK_ELEMENT = {\n  innerHTML: null\n};\n\nvar useCountUp = function useCountUp(props) {\n  var _props = _objectSpread2({}, CountUp.defaultProps, {}, props);\n\n  var start = _props.start,\n      formattingFn = _props.formattingFn;\n\n  var _useState = React.useState(typeof formattingFn === 'function' ? formattingFn(start) : start),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var countUpRef = React.useRef(null);\n\n  var createInstance = function createInstance() {\n    var countUp = createCountUpInstance(MOCK_ELEMENT, _props);\n    var formattingFnRef = countUp.options.formattingFn;\n\n    countUp.options.formattingFn = function () {\n      var result = formattingFnRef.apply(void 0, arguments);\n      setCount(result);\n    };\n\n    return countUp;\n  };\n\n  var getCountUp = function getCountUp() {\n    var countUp = countUpRef.current;\n\n    if (countUp !== null) {\n      return countUp;\n    }\n\n    var newCountUp = createInstance();\n    countUpRef.current = newCountUp;\n    return newCountUp;\n  };\n\n  var reset = function reset() {\n    var onReset = _props.onReset;\n    getCountUp().reset();\n    onReset({\n      pauseResume: pauseResume,\n      start: restart,\n      update: update\n    });\n  };\n\n  var restart = function restart() {\n    var onStart = _props.onStart,\n        onEnd = _props.onEnd;\n    getCountUp().reset();\n    getCountUp().start(function () {\n      onEnd({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: restart,\n        update: update\n      });\n    });\n    onStart({\n      pauseResume: pauseResume,\n      reset: reset,\n      update: update\n    });\n  };\n\n  var pauseResume = function pauseResume() {\n    var onPauseResume = _props.onPauseResume;\n    getCountUp().pauseResume();\n    onPauseResume({\n      reset: reset,\n      start: restart,\n      update: update\n    });\n  };\n\n  var update = function update(newEnd) {\n    var onUpdate = _props.onUpdate;\n    getCountUp().update(newEnd);\n    onUpdate({\n      pauseResume: pauseResume,\n      reset: reset,\n      start: restart\n    });\n  };\n\n  React.useEffect(function () {\n    var delay = _props.delay,\n        onStart = _props.onStart,\n        onEnd = _props.onEnd,\n        startOnMount = _props.startOnMount;\n\n    if (startOnMount) {\n      var timeout = setTimeout(function () {\n        onStart({\n          pauseResume: pauseResume,\n          reset: reset,\n          update: update\n        });\n        getCountUp().start(function () {\n          clearTimeout(timeout);\n          onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: restart,\n            update: update\n          });\n        });\n      }, delay * 1000);\n    }\n\n    return reset;\n  }, []);\n  return {\n    countUp: count,\n    start: restart,\n    pauseResume: pauseResume,\n    reset: reset,\n    update: update\n  };\n};\n\nexports.default = CountUp;\nexports.useCountUp = useCountUp;\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon } from 'uikit'\n\nconst CoreTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = (props) => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Binance\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nconst ManualPoolTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Manual\n  </Tag>\n)\n\nconst CompoundingPoolTag = (props) => (\n  <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n    Auto\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import React from 'react'\nimport { Button, useWalletModal } from 'uikit'\nimport { getENVChainId } from 'sdk'\nimport { useActiveWeb3React } from 'hooks'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n\n  const { login, logout } = useAuth()\n\n  const { chainId } = useActiveWeb3React()\n\n  const activeChainId = chainId ?? getENVChainId()\n\n  const { onPresentConnectModal } = useWalletModal(login, logout, t, activeChainId)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","!function(a,n){\"function\"==typeof define&&define.amd?define(n):\"object\"==typeof exports?module.exports=n(require,exports,module):a.CountUp=n()}(this,function(a,n,t){var e=function(a,n,t,e,i,r){function o(a){var n,t,e,i,r,o,s=a<0;if(a=Math.abs(a).toFixed(l.decimals),a+=\"\",n=a.split(\".\"),t=n[0],e=n.length>1?l.options.decimal+n[1]:\"\",l.options.useGrouping){for(i=\"\",r=0,o=t.length;r<o;++r)0!==r&&r%3===0&&(i=l.options.separator+i),i=t[o-r-1]+i;t=i}return l.options.numerals.length&&(t=t.replace(/[0-9]/g,function(a){return l.options.numerals[+a]}),e=e.replace(/[0-9]/g,function(a){return l.options.numerals[+a]})),(s?\"-\":\"\")+l.options.prefix+t+e+l.options.suffix}function s(a,n,t,e){return t*(-Math.pow(2,-10*a/e)+1)*1024/1023+n}function u(a){return\"number\"==typeof a&&!isNaN(a)}var l=this;if(l.version=function(){return\"1.9.3\"},l.options={useEasing:!0,useGrouping:!0,separator:\",\",decimal:\".\",easingFn:s,formattingFn:o,prefix:\"\",suffix:\"\",numerals:[]},r&&\"object\"==typeof r)for(var m in l.options)r.hasOwnProperty(m)&&null!==r[m]&&(l.options[m]=r[m]);\"\"===l.options.separator?l.options.useGrouping=!1:l.options.separator=\"\"+l.options.separator;for(var d=0,c=[\"webkit\",\"moz\",\"ms\",\"o\"],f=0;f<c.length&&!window.requestAnimationFrame;++f)window.requestAnimationFrame=window[c[f]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[c[f]+\"CancelAnimationFrame\"]||window[c[f]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(a,n){var t=(new Date).getTime(),e=Math.max(0,16-(t-d)),i=window.setTimeout(function(){a(t+e)},e);return d=t+e,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)}),l.initialize=function(){return!!l.initialized||(l.error=\"\",l.d=\"string\"==typeof a?document.getElementById(a):a,l.d?(l.startVal=Number(n),l.endVal=Number(t),u(l.startVal)&&u(l.endVal)?(l.decimals=Math.max(0,e||0),l.dec=Math.pow(10,l.decimals),l.duration=1e3*Number(i)||2e3,l.countDown=l.startVal>l.endVal,l.frameVal=l.startVal,l.initialized=!0,!0):(l.error=\"[CountUp] startVal (\"+n+\") or endVal (\"+t+\") is not a number\",!1)):(l.error=\"[CountUp] target is null or undefined\",!1))},l.printValue=function(a){var n=l.options.formattingFn(a);\"INPUT\"===l.d.tagName?this.d.value=n:\"text\"===l.d.tagName||\"tspan\"===l.d.tagName?this.d.textContent=n:this.d.innerHTML=n},l.count=function(a){l.startTime||(l.startTime=a),l.timestamp=a;var n=a-l.startTime;l.remaining=l.duration-n,l.options.useEasing?l.countDown?l.frameVal=l.startVal-l.options.easingFn(n,0,l.startVal-l.endVal,l.duration):l.frameVal=l.options.easingFn(n,l.startVal,l.endVal-l.startVal,l.duration):l.countDown?l.frameVal=l.startVal-(l.startVal-l.endVal)*(n/l.duration):l.frameVal=l.startVal+(l.endVal-l.startVal)*(n/l.duration),l.countDown?l.frameVal=l.frameVal<l.endVal?l.endVal:l.frameVal:l.frameVal=l.frameVal>l.endVal?l.endVal:l.frameVal,l.frameVal=Math.round(l.frameVal*l.dec)/l.dec,l.printValue(l.frameVal),n<l.duration?l.rAF=requestAnimationFrame(l.count):l.callback&&l.callback()},l.start=function(a){l.initialize()&&(l.callback=a,l.rAF=requestAnimationFrame(l.count))},l.pauseResume=function(){l.paused?(l.paused=!1,delete l.startTime,l.duration=l.remaining,l.startVal=l.frameVal,requestAnimationFrame(l.count)):(l.paused=!0,cancelAnimationFrame(l.rAF))},l.reset=function(){l.paused=!1,delete l.startTime,l.initialized=!1,l.initialize()&&(cancelAnimationFrame(l.rAF),l.printValue(l.startVal))},l.update=function(a){if(l.initialize()){if(a=Number(a),!u(a))return void(l.error=\"[CountUp] update() - new endVal is not a number: \"+a);l.error=\"\",a!==l.frameVal&&(cancelAnimationFrame(l.rAF),l.paused=!1,delete l.startTime,l.startVal=l.frameVal,l.endVal=a,l.countDown=l.startVal>l.endVal,l.rAF=requestAnimationFrame(l.count))}},l.initialize()&&l.printValue(l.startVal)};return e});","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useEffect, useState } from 'react'\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, localStorageKey: string) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? JSON.parse(valueFromLS) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(value))\n  }, [value, localStorageKey])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from 'uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst FarmsPageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default FarmsPageHeader\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n"],"sourceRoot":""}