{"version":3,"sources":["components/PageHeader/SlippageToleranceSetting.tsx","components/PageHeader/TransactionDeadlineSetting.tsx","components/PageHeader/AudioSetting.tsx","components/PageHeader/SettingsModal.tsx","components/PageHeader/RecentTransactionsModal.tsx","components/PageHeader/index.tsx","../node_modules/react-feather/dist/icons/arrow-down.js","components/AddressInputPanel/index.tsx","../node_modules/react-feather/dist/icons/repeat.js","components/swap/FormattedPriceImpact.tsx","components/swap/SwapModalFooter.tsx","components/swap/SwapModalHeader.tsx","components/swap/ConfirmSwapModal.tsx","../node_modules/react-feather/dist/icons/chevron-right.js","components/swap/SwapRoute.tsx","components/swap/AdvancedSwapDetails.tsx","components/swap/AdvancedSwapDetailsDropdown.tsx","components/swap/TradePrice.tsx","components/TokenWarningModal/index.tsx","components/SafeMoonWarningModal/index.tsx","components/ProgressSteps/index.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/index.tsx","components/swap/confirmPriceImpactWithoutFee.ts"],"names":["Option","styled","div","Options","theme","mediaQueries","sm","predefinedValues","label","value","SlippageToleranceSettings","t","useUserSlippageTolerance","userSlippageTolerance","setUserslippageTolerance","useState","setValue","error","setError","useEffect","rawValue","Number","isNaN","mb","alignItems","bold","QuestionHelper","text","mr","map","predefinedValue","variant","onClick","type","scale","step","min","placeholder","onChange","evt","inputValue","target","parseFloat","isWarning","fontSize","mt","color","Field","Input","TransactionDeadlineSetting","useUserDeadline","deadline","setDeadline","parseInt","ml","AudioSetting","useMatchBreakpoints","isSm","isXs","useAudioModeManager","audioPlay","toggleSetAudioMode","checked","defaultOnDismiss","SettingsModal","onDismiss","title","SlippageToleranceSetting","newTransactionsFirst","a","b","addedTime","RecentTransactionsModal","useActiveWeb3React","account","chainId","allTransactions","useAllTransactions","sortedRecentTransactions","useMemo","Object","values","filter","isTransactionRecent","sort","justifyContent","flexDirection","length","sortedRecentTransaction","hash","summary","receipt","status","icon","Loader","getRowStatus","href","getScanLink","StyledPageHeader","colors","borderColor","Details","PageHeader","description","children","useTranslation","useModal","onPresentSettings","onPresentRecentTransactions","width","_extends","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowDown","forwardRef","_ref","ref","_ref$color","_ref$size","size","rest","React","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","propTypes","PropTypes","string","oneOfType","number","displayName","InputPanel","invertedContrast","ContainerRow","failure","InputContainer","input","primary","textDisabled","AddressInputPanel","id","useENS","address","loading","name","handleInput","useCallback","event","withoutSpaces","replace","Boolean","gap","Row","fontWeight","style","className","autoComplete","autoCorrect","autoCapitalize","spellCheck","pattern","Repeat","d","FormattedPriceImpact","priceImpact","severity","warningSeverity","lessThan","ONE_BIPS","toFixed","SwapModalFooter","trade","onConfirm","allowedSlippage","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","activeChainId","getENVChainId","slippageAdjustedAmounts","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","priceImpactWithoutFee","realizedLPFee","align","display","textAlign","paddingLeft","formatExecutionPrice","tradeType","TradeType","EXACT_INPUT","OUTPUT","toSignificant","INPUT","marginLeft","outputAmount","currency","symbol","inputAmount","disabled","PriceInfoText","Text","SwapModalHeader","recipient","showAcceptChanges","onAcceptChanges","priceImpactSeverity","useContext","ThemeContext","marginTop","CurrencyLogo","marginRight","EXACT_OUTPUT","textSubtle","minWidth","justify","padding","isAddress","shortenAddress","ConfirmSwapModal","originalTrade","isOpen","attemptingTxn","txHash","tradeB","tradeA","currencyEquals","equalTo","modalHeader","modalBottom","pendingText","confirmationContent","message","topContent","bottomContent","TransactionConfirmationModal","content","ChevronRight","memo","px","py","my","border","tertiary","borderRadius","flexWrap","route","path","token","isLastItem","flexShrink","TradeSummary","isExactIn","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","show","AdvancedSwapDetailsDropdown","lastTrade","useLastTruthy","undefined","TradePrice","price","formattedPrice","invert","baseCurrency","quoteCurrency","Wrapper","transparentize","WarningContainer","StyledWarningIcon","AlertTriangle","TokenWarningCard","tokenSymbol","toLowerCase","tokenName","allTokens","useAllTokens","duplicateNameOrSymbol","some","tokenAddress","userToken","equals","TokenWarningModal","tokens","understandChecked","setUnderstandChecked","toggleUnderstand","uc","handleDismiss","Modal","maxHeight","htmlFor","cursor","userSelect","as","binance","SafeMoonWarningModal","tokenInfo","extensions","fee","toString","share_fee","lp_fee","burn_fee","bonus_fee","AutoColumn","Grouping","RowBetween","Circle","confirmed","backgroundDisabled","success","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","recipientAddressOrName","library","recipientAddress","contract","getRouterContract","swapMethods","push","Router","swapCallParameters","feeOnTransfer","Percent","JSBI","BigInt","Math","floor","BIPS_BASE","ttl","parameters","useSwapCallback","swapCalls","addTransaction","useTransactionAdder","state","VALID","callback","Promise","all","methodName","args","options","isZero","estimateGas","then","gasEstimate","catch","gasError","console","info","callStatic","result","Error","callError","errorMessage","reason","estimatedCalls","successfulEstimation","find","el","ix","list","errorCalls","gasLimit","DEFAULT_GAS_LIMIT","calculateGasMargin","from","response","inputSymbol","outputSymbol","base","withRecipient","callerror","code","INVALID","LOADING","WrapType","NOT_APPLICABLE","wrapType","Swap","loadedUrlParams","useDefaultsFromURLSearch","modalCountdownSecondsRemaining","setModalCountdownSecondsRemaining","hasPoppedModal","setHasPoppedModal","interruptRedirectCountdown","setInterruptRedirectCountdown","useCurrency","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","selectedToken","purchaseType","transactionWarning","setTransactionWarning","urlLoadedTokens","c","Token","handleConfirmTokenWarning","useExpertModeManager","isExpertMode","useSwapState","independentField","typedValue","useDerivedSwapInfo","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","inputCurrency","outputCurrency","wethContract","useWETHContract","balance","useCurrencyBalance","tryParseAmount","sufficientBalance","getETH","getWETH","WRAP","execute","deposit","raw","txReceipt","getETHId","getWETHId","UNWRAP","withdraw","useWrapCallback","onWrap","wrapInputError","showWrap","disabledSwaps","inputCurrencySymbol","outputCurrencySymbol","doesInputMatch","includes","doesOutputMatch","timerInterval","setInterval","prevSeconds","clearInterval","window","location","parsedAmounts","useSwapActionHandlers","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","handleTypeOutput","showConfirm","tradeToConfirm","setSwapState","formattedAmounts","toExact","userHasSpecifiedInputOutput","greaterThan","noRoute","useApproveCallbackFromTrade","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","ApprovalState","PENDING","maxAmountInput","maxAmountSpend","atMaxAmountInput","swapCallback","swapCallbackError","handleSwap","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","ALLOWED_PRICE_IMPACT_HIGH","confirm","prompt","confirmPriceImpactWithoutFee","prevState","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","checkForWarning","selected","currentInputCurrency","setCurrentInputCurrency","currentOutputCurrency","setCurrentOutputCurrency","handleInputSelect","handleMaxInput","handleOutputSelect","Page","Container","CardNav","AppBody","CurrencyInputPanel","showMaxButton","onMax","onCurrencySelect","otherCurrency","clickable","Card","executionPrice","ConnectWalletButton"],"mappings":"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","file":"static/js/8.6c7fb6dd.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Box, Button, Flex, Input, Text } from 'uikit'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport QuestionHelper from '../QuestionHelper'\n\nconst MAX_SLIPPAGE = 5000\nconst RISKY_SLIPPAGE_LOW = 50\nconst RISKY_SLIPPAGE_HIGH = 500\n\nconst Option = styled.div`\n  padding: 0 4px;\n`\n\nconst Options = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  ${Option}:first-child {\n    padding-left: 0;\n  }\n\n  ${Option}:last-child {\n    padding-right: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst predefinedValues = [\n  { label: '0.1%', value: 0.1 },\n  { label: '0.5%', value: 0.5 },\n  { label: '1%', value: 1 },\n]\n\ntype SlippageToleranceSettingsModalProps = {\n  t: (fallback: string) => string\n}\n\nconst SlippageToleranceSettings = ({ t }: SlippageToleranceSettingsModalProps) => {\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n\n  const [value, setValue] = useState(userSlippageTolerance / 100)\n\n  const [error, setError] = useState<string | null>(null)\n  \n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(parseFloat(inputValue))\n  }\n\n  // Updates local storage if value is valid\n  useEffect(() => {\n    try {\n      const rawValue = value * 100\n      if (!Number.isNaN(rawValue) && rawValue > 0 && rawValue < MAX_SLIPPAGE) {\n        setUserslippageTolerance(rawValue)\n        setError(null)\n      } else {\n        setError(t('Enter a valid slippage percentage'))\n      }\n    } catch {\n      setError(t('Enter a valid slippage percentage'))\n    }\n  }, [value, setError, setUserslippageTolerance, t])\n\n  // Notify user if slippage is risky\n  useEffect(() => {\n    if (userSlippageTolerance < RISKY_SLIPPAGE_LOW) {\n      setError(t('Your transaction may fail'))\n    } else if (userSlippageTolerance > RISKY_SLIPPAGE_HIGH) {\n      setError(t('Your transaction may be frontrun'))\n    }\n  }, [userSlippageTolerance, setError, t])\n\n  return (\n    <Box mb=\"16px\">\n      <Flex alignItems=\"center\" mb=\"8px\">\n        <Text bold>{t('Slippage tolerance')}</Text>\n        <QuestionHelper\n          text={t(\n            'Your transaction will revert if the price changes unfavorably by more than this percentage.'\n          )}\n        />\n      </Flex>\n      <Options>\n        <Flex mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n          {predefinedValues.map(({ label, value: predefinedValue }) => {\n            const handleClick = () => setValue(predefinedValue)\n\n            return (\n              <Option key={predefinedValue}>\n                <Button variant={value === predefinedValue ? 'primary' : 'tertiary'} onClick={handleClick}>\n                  {label}\n                </Button>\n              </Option>\n            )\n          })}\n        </Flex>\n        <Flex alignItems=\"center\">\n          <Option>\n            <Input\n              type=\"number\"\n              scale=\"lg\"\n              step={0.1}\n              min={0.1}\n              placeholder=\"5%\"\n              value={value}\n              onChange={handleChange}\n              isWarning={error !== null}\n            />\n          </Option>\n          <Option>\n            <Text fontSize=\"18px\">%</Text>\n          </Option>\n        </Flex>\n      </Options>\n      {error && (\n        <Text mt=\"8px\" color=\"failure\">\n          {error}\n        </Text>\n      )}\n    </Box>\n  )\n}\n\nexport default SlippageToleranceSettings\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Input, Text, Flex, Box } from 'uikit'\nimport { useUserDeadline } from 'state/user/hooks'\nimport QuestionHelper from '../QuestionHelper'\n\nconst Field = styled.div`\n  align-items: center;\n  display: inline-flex;\n\n  & > ${Input} {\n    max-width: 100px;\n  }\n`\n\ntype TransactionDeadlineSettingModalProps = {\n  t: (fallback: string) => string\n}\n\nconst TransactionDeadlineSetting = ({ t }: TransactionDeadlineSettingModalProps) => {\n  const [deadline, setDeadline] = useUserDeadline()\n  const [value, setValue] = useState(deadline / 60) // deadline in minutes\n  const [error, setError] = useState<string | null>(null)\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(parseInt(inputValue, 10))\n  }\n\n  // Updates local storage if value is valid\n  useEffect(() => {\n    try {\n      const rawValue = value * 60\n      if (!Number.isNaN(rawValue) && rawValue > 0) {\n        setDeadline(rawValue)\n        setError(null)\n      } else {\n        setError(t('Enter a valid deadline'))\n      }\n    } catch {\n      setError(t('Enter a valid deadline'))\n    }\n  }, [value, setError, setDeadline, t])\n\n  return (\n    <Box mb=\"16px\">\n      <Flex alignItems=\"center\" mb=\"8px\">\n        <Text bold>{t('Transaction deadline')}</Text>\n        <QuestionHelper\n          text={t('Your transaction will revert if it is pending for more than this long.')}\n        />\n      </Flex>\n      <Field>\n        <Input type=\"number\" step=\"1\" min=\"1\" value={value} onChange={handleChange} />\n        <Text fontSize=\"14px\" ml=\"8px\">\n          {t(\"Minutes\")}\n        </Text>\n      </Field>\n      {error && (\n        <Text mt=\"8px\" color=\"failure\">\n          {error}\n        </Text>\n      )}\n    </Box>\n  )\n}\n\nexport default TransactionDeadlineSetting\n","import React from 'react'\nimport { Box, Flex, Text, PancakeToggle, useMatchBreakpoints } from 'uikit'\nimport { useAudioModeManager } from 'state/user/hooks'\n\ntype AudioSettingModalProps = {\n  t: (fallback: string) => string\n}\n\nconst AudioSetting = ({ t }: AudioSettingModalProps) => {\n  const { isSm, isXs } = useMatchBreakpoints()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n\n  return (\n    <Box mb=\"16px\">\n      <Flex alignItems=\"center\" mb=\"8px\">\n        <Text bold>{t('Audio')}</Text>\n      </Flex>\n      <Box>\n        <PancakeToggle scale={isSm || isXs ? 'sm' : 'md'} checked={audioPlay} onChange={toggleSetAudioMode} />\n      </Box>\n    </Box>\n  )\n}\n\nexport default AudioSetting\n","import React from 'react'\nimport { Modal } from 'uikit'\nimport SlippageToleranceSetting from './SlippageToleranceSetting'\nimport TransactionDeadlineSetting from './TransactionDeadlineSetting'\nimport AudioSetting from './AudioSetting'\n\ntype SettingsModalProps = {\n  onDismiss?: () => void\n  t: (fallback: string) => string\n}\n\n// TODO: Fix UI Kit typings\nconst defaultOnDismiss = () => null\n\nconst SettingsModal = ({ onDismiss = defaultOnDismiss, t }: SettingsModalProps) => {\n  return (\n    <Modal title={t('Settings')} onDismiss={onDismiss}>\n\n      <SlippageToleranceSetting t={t} />\n\n      <TransactionDeadlineSetting t={t} />\n\n      <AudioSetting t={t} />\n\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React, { useMemo } from 'react'\nimport { getScanLink } from 'sdk'\nimport { CheckmarkCircleIcon, ErrorIcon, Flex, LinkExternal, Text, Modal, Button } from 'uikit'\nimport { useActiveWeb3React } from 'hooks'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport Loader from 'components/Loader'\n\ntype RecentTransactionsModalProps = {\n  onDismiss?: () => void\n  t: (fallback: string) => string\n}\n\n// TODO: Fix UI Kit typings\nconst defaultOnDismiss = () => null\n\nconst newTransactionsFirst = (a: TransactionDetails, b: TransactionDetails) => b.addedTime - a.addedTime\n\nconst getRowStatus = (sortedRecentTransaction: TransactionDetails) => {\n  const { hash, receipt } = sortedRecentTransaction\n\n  if (!hash) {\n    return { icon: <Loader />, color: 'text' }\n  }\n\n  if (hash && receipt?.status === 1) {\n    return { icon: <CheckmarkCircleIcon color=\"success\" />, color: 'success' }\n  }\n\n  return { icon: <ErrorIcon color=\"failure\" />, color: 'failure' }\n}\n\nconst RecentTransactionsModal = ({ onDismiss = defaultOnDismiss, t }: RecentTransactionsModalProps) => {\n  const { account, chainId } = useActiveWeb3React()\n\n  const allTransactions = useAllTransactions()\n\n  // Logic taken from Web3Status/index.tsx line 175\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  return (\n    <Modal title={t('Recent transactions')} onDismiss={onDismiss}>\n      {!account && (\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n          <Text mb=\"8px\" bold>\n            {t(\"pctoseept\")}\n          </Text>\n          <Button variant=\"tertiary\" scale=\"sm\" mt=\"10px\" onClick={onDismiss}>\n            {t(\"Close\")}\n          </Button>\n        </Flex>\n      )}\n      {account && chainId && sortedRecentTransactions.length === 0 && (\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n          <Text mb=\"8px\" bold>\n            {t(\"No recent transactions\")}\n          </Text>\n          <Button variant=\"tertiary\" scale=\"sm\" mt=\"10px\" onClick={onDismiss}>\n            {t(\"Close\")}\n          </Button>\n        </Flex>\n      )}\n      {account &&\n        chainId &&\n        sortedRecentTransactions.map((sortedRecentTransaction) => {\n          const { hash, summary } = sortedRecentTransaction\n          const { icon, color } = getRowStatus(sortedRecentTransaction)\n\n          return (\n            <>\n              <Flex key={hash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n                <LinkExternal href={getScanLink(chainId, hash, 'transaction')} color={color}>\n                  {summary ?? hash}\n                </LinkExternal>\n                {icon}\n              </Flex>\n            </>\n          )\n        })}\n    </Modal>\n  )\n}\n\nexport default RecentTransactionsModal\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Heading, IconButton, Text, Flex, useModal, TuneIcon, HistoryIcon } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport SettingsModal from './SettingsModal'\nimport RecentTransactionsModal from './RecentTransactionsModal'\n\ninterface PageHeaderProps {\n  title: ReactNode\n  description?: ReactNode\n  children?: ReactNode\n}\n\nconst StyledPageHeader = styled.div`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding: 24px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst PageHeader = ({ title, description, children }: PageHeaderProps) => {\n  const { t } = useTranslation()\n\n  const [onPresentSettings] = useModal(<SettingsModal t={t} />)\n \n  const [onPresentRecentTransactions] = useModal(<RecentTransactionsModal t={t} />)\n\n  return (\n    <StyledPageHeader>\n      <Flex alignItems=\"center\">\n        <Details>\n          <Heading mb=\"8px\">{title}</Heading>\n          {description && (\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {description}\n            </Text>\n          )}\n        </Details>\n        <IconButton variant=\"text\" onClick={onPresentSettings} title={t('Settings')}>\n          <TuneIcon width=\"24px\" color=\"currentColor\" />\n        </IconButton>\n        <IconButton\n          variant=\"text\"\n          onClick={onPresentRecentTransactions}\n          title={t('Recent transactions')}\n        >\n          <HistoryIcon width=\"24px\" color=\"currentColor\" />\n        </IconButton>\n      </Flex>\n      {children && <Text mt=\"16px\">{children}</Text>}\n    </StyledPageHeader>\n  )\n}\n\nexport default PageHeader\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowDown = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"19 12 12 19 5 12\"\n  }));\n});\nArrowDown.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowDown.displayName = 'ArrowDown';\nexport default ArrowDown;","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { getScanLink } from 'sdk'\nimport { Text } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../hooks/useENS'\nimport { useActiveWeb3React } from '../../hooks'\nimport { ExternalLink } from '../Shared'\nimport { AutoColumn } from '../Column'\nimport { RowBetween } from '../Row'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  z-index: 1;\n  width: 100%;\n`\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.invertedContrast)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange]\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text color=\"textSubtle\" fontWeight={500} fontSize=\"14px\">\n                {t('Recipient')}\n              </Text>\n              {address && chainId && (\n                <ExternalLink href={getScanLink(chainId, name ?? address, 'address')} style={{ fontSize: '14px' }}>\n                  {t('(View on Scan)')}\n                </ExternalLink>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Repeat = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"17 1 21 5 17 9\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 11V9a4 4 0 0 1 4-4h14\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"7 23 3 19 7 15\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 13v2a4 4 0 0 1-4 4H3\"\n  }));\n});\nRepeat.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nRepeat.displayName = 'Repeat';\nexport default Repeat;","import { ONE_BIPS } from 'sdk'\nimport Percent from 'sdk/entities/fractions/percent'\nimport React from 'react'\nimport { warningSeverity } from '../../utils/prices'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import { TradeType, getENVChainId } from 'sdk'\nimport Trade from 'sdk/entities/trade'\nimport React, { useMemo, useState } from 'react'\nimport { Text, Button } from 'uikit'\nimport { Repeat } from 'react-feather'\nimport { useTranslation } from 'contexts/Localization'\nimport { useActiveWeb3React } from 'hooks'\nimport { Field } from '../../state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  const { chainId } = useActiveWeb3React()\n\n  const activeChainId = chainId ?? getENVChainId()\n\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(activeChainId, trade, allowedSlippage), [\n    allowedSlippage,\n    trade,\n    activeChainId\n  ])\n\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(activeChainId, trade), [trade, activeChainId])\n  \n  const severity = warningSeverity(priceImpactWithoutFee)\n \n  const { t } = useTranslation()\n\n  return (\n    <>\n      <AutoColumn gap=\"0px\">\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '8px',\n              fontWeight: 500,\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <Repeat size={14} />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? t('Minimum received')\n                : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.'\n              )}\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\n            <QuestionHelper\n              text={t('The difference between the market price and your price due to trade size.')}\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={t(\n                'For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the PancakeSwap treasury.'\n              )}\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </AutoColumn>\n\n      <AutoRow>\n        <Button\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          variant={severity > 2 ? 'danger' : 'primary'}\n          mt=\"10px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? t('Swap Anyway') : t('Confirm Swap')}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { TradeType, getENVChainId } from 'sdk'\nimport Trade from 'sdk/entities/trade'\nimport { Button, Text } from 'uikit'\nimport { ArrowDown, AlertTriangle } from 'react-feather'\nimport { useActiveWeb3React } from 'hooks' \nimport { Field } from '../../state/swap/actions'\nimport { isAddress, shortenAddress } from '../../utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { RowBetween, RowFixed } from '../Row'\nimport { SwapShowAcceptChanges } from './styleds'\n\nconst PriceInfoText = styled(Text)`\n  font-style: italic;\n  line-height: 1.3;\n\n  span {\n    color: ${({ theme }) => theme.colors.primary};\n    font-weight: 600;\n  }\n`\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n\n  const { chainId } = useActiveWeb3React()\n\n  const activeChainId = chainId ?? getENVChainId()\n\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(activeChainId, trade, allowedSlippage), [\n    trade,\n    allowedSlippage,\n    activeChainId\n  ])\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(activeChainId, trade), [trade, activeChainId])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <Text\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? theme.colors.primary : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </Text>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" style={{ marginLeft: '10px', fontWeight: 500 }}>\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDown size=\"16\" color={theme.colors.textSubtle} style={{ marginLeft: '4px', minWidth: '16px' }} />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <Text\n            fontSize=\"24px\"\n            style={{ marginLeft: '10px', fontWeight: 500 }}\n            color={\n              priceImpactSeverity > 2\n                ? theme.colors.failure\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? theme.colors.primary\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </Text>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" style={{ marginLeft: '10px', fontWeight: 500 }}>\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <AlertTriangle size={20} style={{ marginRight: '8px', minWidth: 24 }} />\n              <Text color=\"primary\"> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '16px 0 0' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <PriceInfoText>\n            {`Output is estimated. You will receive at least `}\n            <span>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </span>\n            {' or the transaction will revert.'}\n          </PriceInfoText>\n        ) : (\n          <PriceInfoText>\n            {`Input is estimated. You will sell at most `}\n            <span>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </span>\n            {' or the transaction will revert.'}\n          </PriceInfoText>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '16px 0 0' }}>\n          <Text>\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import { currencyEquals } from 'sdk'\nimport Trade from 'sdk/entities/trade'\nimport React, { useCallback, useMemo } from 'react'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent\n} from '../TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\n\nexport default function ConfirmSwapModal({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  recipient,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash,\n  t\n}: {\n  isOpen: boolean\n  trade: Trade | undefined\n  originalTrade: Trade | undefined\n  attemptingTxn: boolean\n  txHash: string | undefined\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  onDismiss: () => void\n  t: (string) => string\n}) {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade]\n  )\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = `Swapping ${trade?.inputAmount?.toSignificant(6)} ${\n    trade?.inputAmount?.currency?.symbol\n  } for ${trade?.outputAmount?.toSignificant(6)} ${trade?.outputAmount?.currency?.symbol}`\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent\n          title={t(\"Confirm Swap\")}\n          onDismiss={onDismiss}\n          topContent={modalHeader}\n          bottomContent={modalBottom}\n        />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage, t]\n  )\n\n  return (\n    <TransactionConfirmationModal\n      t={t}\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n    />\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronRight = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"9 18 15 12 9 6\"\n  }));\n});\nChevronRight.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronRight.displayName = 'ChevronRight';\nexport default ChevronRight;","import Trade from 'sdk/entities/trade'\nimport React, { Fragment, memo, useContext } from 'react'\nimport { ChevronRight } from 'react-feather'\nimport { Flex, Text } from 'uikit'\nimport { ThemeContext } from 'styled-components'\nimport CurrencyLogo from '../CurrencyLogo'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  const theme = useContext(ThemeContext)\n  return (\n    <Flex\n      px=\"1rem\"\n      py=\"0.5rem\"\n      my=\"0.5rem\"\n      style={{ border: `1px solid ${theme.colors.tertiary}`, borderRadius: '1rem' }}\n      flexWrap=\"wrap\"\n      justifyContent=\"space-evenly\"\n      alignItems=\"center\"\n    >\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex my=\"0.5rem\" alignItems=\"center\" style={{ flexShrink: 0 }}>\n              <CurrencyLogo currency={token} size=\"1.5rem\" />\n              <Text fontSize=\"14px\" color=\"text\" ml=\"0.5rem\">\n                {token.symbol}\n              </Text>\n            </Flex>\n            {isLastItem ? null : <ChevronRight color=\"textSubtle\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { TradeType, getENVChainId } from 'sdk'\nimport Trade from 'sdk/entities/trade'\nimport { Card, CardBody, Text } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useActiveWeb3React } from 'hooks'\nimport { Field } from '../../state/swap/actions'\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../utils/prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { SectionBreak } from './styleds'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { chainId } = useActiveWeb3React()\n\n  const activeChainId = chainId ?? getENVChainId()\n\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(activeChainId, trade)\n\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(activeChainId, trade, allowedSlippage)\n  \n  const { t } = useTranslation()\n\n  return (\n    <Card>\n      <CardBody>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {isExactIn ? t('Minimum received') : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.'\n              )}\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {isExactIn\n                ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                  '-'\n                : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ??\n                  '-'}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize='14px'>{t('Price Impact')}</Text>\n            <QuestionHelper\n              text={t(\n                'The difference between the market price and estimated price due to trade size.'\n              )}\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={t(\n                'For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the PancakeSwap treasury.'\n              )}\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const { t } = useTranslation()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"md\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <SectionBreak />\n              <AutoColumn style={{ padding: '0 24px' }}>\n                <RowFixed>\n                  <Text fontSize=\"14px\">{t('Route')}</Text>\n                  <QuestionHelper\n                    text={t(\n                      'rtftrade'\n                    )}\n                  />\n                </RowFixed>\n                <SwapRoute trade={trade} />\n              </AutoColumn>\n            </>\n          )}\n        </>\n      )}\n      \n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLastTruthy } from '../../hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  z-index: 1;\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport Price from 'sdk/entities/fractions/price'\nimport { SyncAltIcon, Text } from 'uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text fontSize=\"14px\" style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <SyncAltIcon width=\"20px\" color=\"primary\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import Token from 'sdk/entities/token'\nimport { transparentize } from 'polished'\nimport { getScanLink } from 'sdk'\nimport { Button, Text } from 'uikit'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { AlertTriangle } from 'react-feather'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAllTokens } from 'state/user/hooks'\nimport { useActiveWeb3React } from 'hooks'\nimport { shortenAddress } from '../../utils'\nimport { ExternalLink } from '../Shared'\nimport CurrencyLogo from '../CurrencyLogo'\nimport Modal from '../Modal'\nimport { AutoRow, RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\n\nconst Wrapper = styled.div<{ error: boolean }>`\n  background: ${({ theme }) => transparentize(0.6, theme.colors.tertiary)};\n  padding: 0.75rem;\n  border-radius: 20px;\n`\n\nconst WarningContainer = styled.div`\n  max-width: 420px;\n  width: 100%;\n  padding: 1rem;\n  background: rgba(242, 150, 2, 0.05);\n  border: 1px solid #f3841e;\n  border-radius: 20px;\n  overflow: auto;\n`\n\nconst StyledWarningIcon = styled(AlertTriangle)`\n  stroke: ${({ theme }) => theme.colors.failure};\n`\n\ninterface TokenWarningCardProps {\n  token?: Token\n}\n\nfunction TokenWarningCard({ token }: TokenWarningCardProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const tokenSymbol = token?.symbol?.toLowerCase() ?? ''\n\n  const tokenName = token?.name?.toLowerCase() ?? ''\n\n  const allTokens = useAllTokens()\n\n  const duplicateNameOrSymbol = useMemo(() => {\n    if (!token || !chainId) return false\n\n    return Object.keys(allTokens).some((tokenAddress) => {\n      const userToken = allTokens[tokenAddress]\n      if (userToken.equals(token)) {\n        return false\n      }\n      return userToken.symbol?.toLowerCase() === tokenSymbol || userToken.name?.toLowerCase() === tokenName\n    })\n  }, [token, chainId, allTokens, tokenSymbol, tokenName])\n\n  if (!token) return null\n\n  return (\n    <Wrapper error={duplicateNameOrSymbol}>\n      <AutoRow gap=\"6px\">\n        <AutoColumn gap=\"24px\">\n          <CurrencyLogo currency={token} size=\"16px\" />\n          <div> </div>\n        </AutoColumn>\n        <AutoColumn gap=\"10px\" justify=\"flex-start\">\n          <Text>\n            {token && token.name && token.symbol && token.name !== token.symbol\n              ? `${token.name} (${token.symbol})`\n              : token.name || token.symbol}{' '}\n          </Text>\n          {chainId && (\n            <ExternalLink style={{ fontWeight: 400 }} href={getScanLink(chainId, token.address, 'token')}>\n              <Text title={token.address}>\n                {shortenAddress(token.address)} {t('(View on Scan)')}\n              </Text>\n            </ExternalLink>\n          )}\n        </AutoColumn>\n      </AutoRow>\n    </Wrapper>\n  )\n}\n\nexport default function TokenWarningModal({\n  isOpen,\n  tokens,\n  onConfirm,\n}: {\n  isOpen: boolean\n  tokens: Token[]\n  onConfirm: () => void\n}) {\n  const [understandChecked, setUnderstandChecked] = useState(false)\n\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\n  \n  const { t } = useTranslation()\n\n  const handleDismiss = useCallback(() => null, [])\n  return (\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\n      <WarningContainer className=\"token-warning-container\">\n        <AutoColumn gap=\"lg\">\n          <AutoRow gap=\"6px\">\n            <StyledWarningIcon />\n            <Text color=\"failure\">{t('Token imported')}</Text>\n          </AutoRow>\n          <Text>\n            {t(\n              'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.'\n            )}\n          </Text>\n          <Text>\n            {t(\n              'This interface can load arbitrary tokens by token addresses. Please take extra caution and do your research when interacting with arbitrary BEP20 tokens.'\n            )}\n          </Text>\n          <Text>{t('If you purchase an arbitrary token, you may be unable to sell it back.')}</Text>\n          {tokens.map((token) => {\n            return <TokenWarningCard key={token.address} token={token} />\n          })}\n          <RowBetween>\n            <div>\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\n                <input\n                  id=\"understand-checkbox\"\n                  type=\"checkbox\"\n                  className=\"understand-checkbox\"\n                  checked={understandChecked}\n                  onChange={toggleUnderstand}\n                />{' '}\n                <Text as=\"span\" ml=\"4px\">\n                  {t('I understand')}\n                </Text>\n              </label>\n            </div>\n            <Button\n              disabled={!understandChecked}\n              variant=\"danger\"\n              style={{ width: '140px' }}\n              className=\"token-dismiss-button\"\n              onClick={() => {\n                onConfirm()\n              }}\n            >\n              {t('Continue')}\n            </Button>\n          </RowBetween>\n        </AutoColumn>\n      </WarningContainer>\n    </Modal>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from 'uikit'\nimport { AlertTriangle } from 'react-feather'\nimport { useTranslation } from 'contexts/Localization'\nimport Modal from '../Modal'\nimport { AutoRow, RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\n\nconst WarningContainer = styled.div`\n  max-width: 420px;\n  width: 100%;\n  padding: 1rem;\n  background: rgba(242, 150, 2, 0.05);\n  border: 1px solid #f3841e;\n  border-radius: 20px;\n  overflow: auto;\n`\n\nconst StyledWarningIcon = styled(AlertTriangle)`\n  stroke: ${({ theme }) => theme.colors.binance};\n`\n\nexport default function SafeMoonWarningModal({ isOpen, token, onConfirm }: { isOpen: boolean; token: any, onConfirm: () => void }) {\n  const [understandChecked, setUnderstandChecked] = useState(false)\n\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\n\n  const handleDismiss = useCallback(() => null, [])\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\n      <WarningContainer className=\"token-warning-container\">\n        <AutoColumn gap=\"lg\">\n          <AutoRow gap=\"6px\">\n            <StyledWarningIcon />\n            <Text>{t('trandnotice', { name : token?.symbol ? token?.symbol : '' })}</Text>\n          </AutoRow>\n          <>\n            <Text>\n              {t('tnsetting',  { name : token?.symbol ? token?.symbol : '' })} \n              <strong>{t('setST', {value : (token?.tokenInfo?.extensions?.fee + 2).toString()})}%+</strong>\n            </Text>\n            <Text>{t('setReason', {name: token?.symbol ? token?.symbol : '', value: (token?.tokenInfo?.extensions?.fee + 0).toString()})}</Text>\n            {token?.tokenInfo?.extensions?.share_fee && <Text>• {t('setShareFee', {value: (token?.tokenInfo?.extensions?.share_fee + 0).toString()})}</Text>}\n            {token?.tokenInfo?.extensions?.lp_fee && <Text>• {t('setlpFee', {value: (token?.tokenInfo?.extensions?.lp_fee + 0).toString()})}</Text>}\n            {token?.tokenInfo?.extensions?.burn_fee && <Text>• {t('setBurnFee', {value: (token?.tokenInfo?.extensions?.burn_fee + 0).toString()})}</Text>}\n            {token?.tokenInfo?.extensions?.bonus_fee && <Text>• {t('setBonusFee', {value: (token?.tokenInfo?.extensions?.bonus_fee + 0).toString()})}</Text>}\n          </>\n          <RowBetween>\n            <div>\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\n                <input\n                  id=\"understand-safeMoonWarning\"\n                  type=\"checkbox\"\n                  className=\"understand-checkbox\"\n                  checked={understandChecked}\n                  onChange={toggleUnderstand}\n                />{' '}\n                <Text as=\"span\">{t(\"I understand\")}</Text>\n              </label>\n            </div>\n            <Button\n              id=\"confirm-safeMoonWarning\"\n              disabled={!understandChecked}\n              variant=\"danger\"\n              style={{ width: '140px' }}\n              onClick={() => {\n                setUnderstandChecked(false)\n                onConfirm()\n              }}\n            >\n              {t(\"Continue\")}\n            </Button>\n          </RowBetween>\n        </AutoColumn>\n      </WarningContainer>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { transparentize } from 'polished'\nimport { RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\n\nconst Wrapper = styled(AutoColumn)`\n  margin-top: 1.25rem;\n`\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n  color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.text : confirmed ? theme.colors.success : '#FFFFFF'};\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background-color: ;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed }) => transparentize(0.5, prevConfirmed ? theme.colors.success : theme.colors.primary)} 0%,\n    ${({ theme, prevConfirmed }) => (prevConfirmed ? theme.colors.primary : theme.colors.backgroundDisabled)} 80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps }: ProgressCirclesProps) {\n  return (\n    <Wrapper justify=\"center\">\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={!steps[i - 1] && i !== 0}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={!steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </Wrapper>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport Percent from 'sdk/entities/fractions/percent'\nimport Trade from 'sdk/entities/trade'\nimport { Router } from 'sdk/router'\nimport { useMemo } from 'react'\nimport { BIPS_BASE, DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE, JSBI, SwapParameters, TradeType, DEFAULT_GAS_LIMIT } from 'sdk'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useActiveWeb3React } from './index'\nimport useENS from './useENS'\n\n enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface EstimatedSwapCall {\n  call: SwapCall\n  gasEstimate?: BigNumber\n  error?: Error\n}\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param deadline the deadline for the trade\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    \n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      // @ts-ignore\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\n        recipient,\n        ttl: deadline\n      })\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        // @ts-ignore\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\n          recipient,\n          ttl: deadline\n        })\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, deadline, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n\n      callback: async function onSwap(): Promise<string> {\n        \n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n                           .then((gasEstimate) => \n                            {\n                              return {\n                                 call,\n                                 gasEstimate,\n                              }\n                            })\n                           .catch((gasError) => {\n                              console.info('Gas estimate failed, trying eth_call to extract error', call)\n\n                              return contract.callStatic[methodName](...args, options)\n                                             .then((result) => {\n                                                console.info('Unexpected successful call after failed estimate gas', call, gasError, result)\n                                                return {\n                                                  call,\n                                                  error: new Error('Unexpected issue with estimating the gas. Please try again.') \n                                               }\n                                              })\n                                             .catch((callError) => {\n                                                console.info('Call threw error', call, callError)\n                                                let errorMessage: string\n                                                switch (callError.reason) {\n                                                  case 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT':\n                                                  case 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT':\n                                                    errorMessage = 'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.'\n                                                    break\n                                                  default:\n                                                    errorMessage = `The transaction cannot succeed due to error: ${callError.reason}. This is probably an issue with one of the tokens you are swapping.`\n                                                }\n                                                return { call, error: new Error(errorMessage) }\n                                       })\n                            })\n          })\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        let successfulEstimation = estimatedCalls.find(\n          (el, ix, list) =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1])\n        )\n\n        if(!successfulEstimation)\n        {\n          successfulEstimation = estimatedCalls.find(\n            (el) => 'gasEstimate' in el   \n          )\n        }\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call) => call.error)\n\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          \n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }       \n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n          error\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: error? DEFAULT_GAS_LIMIT : calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((callerror: any) => {\n            // if the user rejected the tx, pass this along\n            if (callerror?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, callerror, methodName, args, value)\n              throw new Error(`Swap failed: ${callerror.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n\nexport default useSwapCallback","import { currencyEquals, getETH, getWETH, getETHId, getWETHId } from 'sdk'\nimport Currency from 'sdk/entities/currency'\nimport { useMemo } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useActiveWeb3React } from './index'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n\n  WRAP,\n  \n  UNWRAP\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { account, chainId } = useActiveWeb3React()\n \n  const wethContract = useWETHContract(chainId)\n\n  const { t } = useTranslation()\n\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(chainId, typedValue, inputCurrency), [chainId, inputCurrency, typedValue])\n  \n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === getETH() && currencyEquals(getWETH(), outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} ${getETHId()} to ${getWETHId()}` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : t(\"insufficientBalance\", { name: getETHId()})\n      }\n    } \n    \n    if (currencyEquals(getWETH(), inputCurrency) && outputCurrency === getETH()) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} ${getWETHId()} to ${getETHId()}` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined :  t(\"insufficientBalance\", { name: getWETHId()})   \n      }\n    } \n      return NOT_APPLICABLE\n    \n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, t])\n}\n","import {  JSBI, INITIAL_ALLOWED_SLIPPAGE, getENVChainId } from 'sdk'\nimport CurrencyAmount from 'sdk/entities/fractions/currencyAmount'\nimport Token from 'sdk/entities/token'\nimport Trade from 'sdk/entities/trade'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text } from 'uikit'\nimport { ThemeContext } from 'styled-components'\nimport Page from 'components/layout/Page'\nimport AddressInputPanel from 'components/AddressInputPanel'\nimport Card, { GreyCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\nimport CardNav from 'components/CardNav'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\nimport TradePrice from 'components/swap/TradePrice'\nimport TokenWarningModal from 'components/TokenWarningModal'\nimport SafeMoonWarningModal from 'components/SafeMoonWarningModal'\nimport ProgressSteps from 'components/ProgressSteps'\nimport Container from 'components/Container'\nimport { useActiveWeb3React } from 'hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\nimport { Field } from 'state/swap/actions'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance, useCurrency } from 'state/user/hooks'\nimport { LinkStyledButton } from 'components/Shared'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport Loader from 'components/Loader'\nimport PageHeader from 'components/PageHeader'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport AppBody from '../AppBody'\n\nconst Swap = () => {\n  const { account, chainId } = useActiveWeb3React()\n\n  const activeChainId = chainId ?? getENVChainId()\n  \n  const loadedUrlParams = useDefaultsFromURLSearch()\n  \n  const { t } = useTranslation()\n  \n  const [modalCountdownSecondsRemaining, setModalCountdownSecondsRemaining] = useState(5)\n  \n  const [hasPoppedModal, setHasPoppedModal] = useState(false)\n  \n  const [interruptRedirectCountdown, setInterruptRedirectCountdown] = useState(false)\n \n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(activeChainId, loadedUrlParams?.inputCurrencyId),\n    useCurrency(activeChainId, loadedUrlParams?.outputCurrencyId),\n  ]\n  \n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  \n  const [transactionWarning, setTransactionWarning] = useState<{\n    selectedToken: any | null\n    purchaseType: string | null\n  }>({\n    selectedToken: null,\n    purchaseType: null,\n  })\n\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  const handleConfirmWarning = () => {\n    setTransactionWarning({\n      selectedToken: null,\n      purchaseType: null,\n    })\n  }\n\n  const theme = useContext(ThemeContext)\n\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n \n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  \n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  \n  const trade = showWrap ? undefined : v2Trade\n\n  // Manage disabled trading pairs that should redirect users to V2\n  useEffect(() => {\n    const disabledSwaps = ['BNB', 'BUSD', 'USDT', 'USDC', 'CAKE', 'BUNNY', 'ETH', 'BTCB', 'AUTO', 'XVS']\n    const inputCurrencySymbol = currencies[Field.INPUT]?.symbol || ''\n    const outputCurrencySymbol = currencies[Field.OUTPUT]?.symbol || ''\n    const doesInputMatch = disabledSwaps.includes(inputCurrencySymbol)\n    const doesOutputMatch = disabledSwaps.includes(outputCurrencySymbol)\n\n    if (doesInputMatch && doesOutputMatch) {\n      // Prevent infinite re-render of modal with this condition\n      if (!hasPoppedModal) {\n        setHasPoppedModal(true)\n      }\n\n      const tick = () => {\n        setModalCountdownSecondsRemaining((prevSeconds) => prevSeconds - 1)\n      }\n  \n      const timerInterval = setInterval(() => tick(), 1000)\n\n      if (interruptRedirectCountdown) {\n        // Reset timer if countdown is interrupted\n        clearInterval(timerInterval)\n        \n        setModalCountdownSecondsRemaining(5)\n      }\n\n      if (modalCountdownSecondsRemaining <= 0) {\n        window.location.href = '/swap'\n      }\n\n      return () => {\n        clearInterval(timerInterval)\n      }\n    }\n\n    return undefined\n  }, [\n    currencies,\n    hasPoppedModal,\n    modalCountdownSecondsRemaining,\n    interruptRedirectCountdown,\n  ])\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  \n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(activeChainId, currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(activeChainId, trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n\n    if (!swapCallback) {\n      return\n    }\n\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\n   \n    swapCallback()\n      .then((hash) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          txHash: hash,\n        }))\n      })\n      .catch((error) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        }))\n      })\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\n\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [onUserInput, txHash, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\n  }, [trade])\n\n  // This will check to see if the user has selected Syrup or SafeMoon to either buy or sell.\n  // If so, they will be alerted with a warning message.\n  const checkForWarning = useCallback(\n    (selected: any, purchaseType: string) => {\n      if (selected?.tokenInfo?.extensions?.fee) {\n        setTransactionWarning({\n          selectedToken: selected,\n          purchaseType,\n        })\n      }\n    },\n    [setTransactionWarning]\n  )\n\n  const [currentInputCurrency, setCurrentInputCurrency] = useState(undefined)\n\n  const [currentOutputCurrency, setCurrentOutputCurrency] = useState(undefined)\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setCurrentInputCurrency(inputCurrency)\n      setHasPoppedModal(false)\n      setInterruptRedirectCountdown(false)\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n\n      if (inputCurrency?.tokenInfo?.extensions?.fee) {\n        checkForWarning(inputCurrency, 'Selling')\n      }\n    },\n\n    [onCurrencySelection, setApprovalSubmitted, checkForWarning, setCurrentInputCurrency]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      setCurrentOutputCurrency(outputCurrency)\n\n      setHasPoppedModal(false)\n\n      setInterruptRedirectCountdown(false)\n \n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n  \n      if (outputCurrency?.tokenInfo?.extensions?.fee) {\n        checkForWarning(outputCurrency, 'Buying')\n      }\n    },\n    \n    [onCurrencySelection, checkForWarning, setCurrentOutputCurrency]\n  )\n\n  return (\n    <Page>\n    <Container>\n      <TokenWarningModal\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\n        tokens={urlLoadedTokens}\n        onConfirm={handleConfirmTokenWarning}\n      />\n\n      <SafeMoonWarningModal token={transactionWarning.selectedToken} isOpen={transactionWarning.selectedToken} onConfirm={handleConfirmWarning} />\n      <CardNav />\n      <AppBody>\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            t={t}\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n          <PageHeader\n            title={t('Exchange')}\n            description={t('Trade tokens in an instant')}\n          />\n          <CardBody>\n            <AutoColumn gap=\"md\">\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT && !showWrap && trade\n                    ? t('From (estimated)')\n                    : t('From')\n                }\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={!atMaxAmountInput}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                id=\"swap-currency-input\"\n              />\n              <AutoColumn justify=\"space-between\">\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable>\n                    <IconButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}\n                      style={{ borderRadius: '50%' }}\n                      scale=\"sm\"\n                    >\n                      <ArrowDownIcon color=\"primary\" width=\"24px\" />\n                    </IconButton>\n                  </ArrowWrapper>\n                  {recipient === null && !showWrap && isExpertMode ? (\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                      + Add a send (optional)\n                    </LinkStyledButton>\n                  ) : null}\n                </AutoRow>\n              </AutoColumn>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={\n                  independentField === Field.INPUT && !showWrap && trade\n                    ? t('To (estimated)')\n                    : t('To')\n                }\n                showMaxButton={false}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                id=\"swap-currency-output\"\n              />\n\n              {recipient !== null && !showWrap ? (\n                <>\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                    <ArrowWrapper clickable={false}>\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                    </ArrowWrapper>\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                      - Remove send\n                    </LinkStyledButton>\n                  </AutoRow>\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                </>\n              ) : null}\n\n              {showWrap ? null : (\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\n                  <AutoColumn gap=\"4px\">\n                    {Boolean(trade) && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{t('Price')}</Text>\n                        <TradePrice\n                          price={trade?.executionPrice}\n                          showInverted={showInverted}\n                          setShowInverted={setShowInverted}\n                        />\n                      </RowBetween>\n                    )}\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{t('Slippage tolerance')}</Text>\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\n                      </RowBetween>\n                    )}\n                   {currentInputCurrency?.tokenInfo?.extensions?.fee && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{t('ccfee', {name: currentInputCurrency?.symbol})}</Text>\n                        <Text fontSize=\"14px\">{currentInputCurrency?.tokenInfo?.extensions?.fee}%</Text>\n                      </RowBetween>\n                    )}\n                  {currentOutputCurrency?.tokenInfo?.extensions?.fee && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">{t('ccfee', {name: currentOutputCurrency?.symbol})}</Text>\n                        <Text fontSize=\"14px\">{currentOutputCurrency?.tokenInfo?.extensions?.fee}%</Text>\n                      </RowBetween>\n                    )}       \n                  </AutoColumn>\n                </Card>\n              )}\n            </AutoColumn>\n            <BottomGrouping>\n              {!account ? (\n                <ConnectWalletButton width=\"100%\" />\n              ) : showWrap ? (\n                <Button disabled={Boolean(wrapInputError)} onClick={onWrap} width=\"100%\">\n                  {wrapInputError ??\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                </Button>\n              ) : noRoute && userHasSpecifiedInputOutput ? (\n                <GreyCard style={{ textAlign: 'center' }}>\n                  <Text mb=\"4px\">{t('Insufficient liquidity for this trade')}.</Text>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <RowBetween>\n                  <Button\n                    onClick={approveCallback}\n                    disabled={ approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                    style={{ width: '48%' }}\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <AutoRow gap=\"6px\" justify=\"center\">\n                        Approving <Loader stroke=\"white\" />\n                      </AutoRow>\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                      t('Approved')\n                    ) : (\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\n                    )}\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      if (isExpertMode) {\n                        handleSwap()\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined,\n                        })\n                      }\n                    }}\n                    style={{ width: '48%' }}\n                    id=\"swap-button\"\n                    disabled={\n                      !isValid ||\n                      approval !== ApprovalState.APPROVED ||\n                      (priceImpactSeverity > 3 && !isExpertMode)\n                    }\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  >\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `${t('Price Impact High')}` \n                      : (priceImpactSeverity > 2) ? `${t('Swap Anyway')}` : `${t('Swap')}`}\n                  </Button>\n                </RowBetween>\n              ) : (\n                <Button\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      })\n                    }\n                  }}\n                  id=\"swap-button\"\n                  disabled={\n                   !isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError\n                  }\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                  width=\"100%\"\n                >\n                  {swapInputError ||\n                    (priceImpactSeverity > 3 && !isExpertMode\n                      ? `${t('Price Impact Too High')}`\n                      : (priceImpactSeverity > 2) ? `${t('Swap Anyway')}` : `${t('Swap')}`) }\n                </Button>\n              )}\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            </BottomGrouping>\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </Container>\n    </Page>\n  )\n}\n\nexport default Swap\n","import Percent from 'sdk/entities/fractions/percent'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from 'sdk'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0\n        )}%. Please type the word \"confirm\" to continue with this swap.`\n      ) === 'confirm'\n    )\n  } if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0\n      )}%. Please confirm that you would like to continue with this swap.`\n    )\n  }\n  return true\n}\n"],"sourceRoot":""}